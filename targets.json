[
    {
        "name": "OdsPicker",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/OdsPicker",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/OdsPicker",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "IDEAspects",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/OdsPicker/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "DatePickerAspect",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/DatePickerAspect",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/DatePickerAspect",
        "type": "widget",
        "designerPath": "",
        "valid": true,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "IDEAspects",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "DatePickerAspect.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/DatePickerAspect/DatePickerAspect.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "IDEAspects.DatePickerAspect",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": false,
                    "allowAspectAdapter": true,
                    "title": "Date Picker Aspect",
                    "icon": "fa-cog",
                    "description": "Date Picker Aspect",
                    "categories": [],
                    "isConfigurable": true,
                    "configurationWidget": null,
                    "defaultConfigurationJson": {
                        "formBuilderField": "eDiscoveryUpdatePlannedDate",
                        "defaultValue": {
                            "defaultDateFromNowHours": 24,
                            "getValueUsingParents": true,
                            "maxDepth": 0
                        },
                        "title": "Updated planned due date:",
                        "pickerEnabled": true,
                        "eventToFireOnUpdate": [
                            "IDEAspects.DatePickerAspect.Update"
                        ],
                        "datePickerOptions": {
                            "display": {
                                "inline": true,
                                "sideBySide": true,
                                "theme": "light"
                            }
                        },
                        "debug": {
                            "enabled": true,
                            "logToConsole": true,
                            "showInAspect": true
                        },
                        "eventsToReactTo": [],
                        "dataSettings": {
                            "getValueUsingParents": false,
                            "maxDepth": 0
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/IDEAspects/DatePickerAspect/DatePickerAspect.js"
                ],
                "styles": [
                    "/_ideFiles/IDEAspects/DatePickerAspect/DatePickerAspect.css"
                ],
                "templates": [
                    "/_ideFiles/IDEAspects/DatePickerAspect/DatePickerAspect.html"
                ],
                "menuTemplates": [],
                "components": []
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/DatePickerAspect/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "SingleValueAspect",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/SingleValueAspect",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/SingleValueAspect",
        "type": "widget",
        "designerPath": "",
        "valid": true,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "IDEAspects",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "SingleValueAspect.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/SingleValueAspect/SingleValueAspect.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "IDEAspects.SingleValueAspect",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": false,
                    "allowAspectAdapter": true,
                    "title": "Single Value Aspect",
                    "icon": "fa-cog",
                    "description": "Single Value Aspect",
                    "categories": [],
                    "isConfigurable": true,
                    "configurationWidget": null,
                    "defaultConfigurationJson": {
                        "fieldPath": "Title",
                        "title": "Title Value",
                        "calculatedValue": "",
                        "calculatedTitle": "",
                        "valueOnNotFound": "Not Found",
                        "formatter": "value",
                        "debug": {
                            "supportRequestEnabled": false,
                            "enabled": true,
                            "logToConsole": true,
                            "showInAspect": false,
                            "liveConfig": true
                        },
                        "eventsToReactTo": [
                            {
                                "eventPath": "sharedo.core.case.phase-changed",
                                "methodToCall": "loadAndBind"
                            },
                            {
                                "eventPath": "sharedo.core.case.forms.phase.phase-changed",
                                "methodToCall": "loadAndBind"
                            },
                            {
                                "eventPath": "sharedo.updated",
                                "methodToCall": "loadAndBind"
                            },
                            {
                                "eventPath": "sharedo.core.case.sharedo-updated",
                                "methodToCall": "loadAndBind"
                            }
                        ],
                        "dataSettings": {
                            "getValueUsingParents": false,
                            "maxDepth": 0
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/IDEAspects/SingleValueAspect/SingleValueAspect.js"
                ],
                "styles": [
                    "/_ideFiles/IDEAspects/SingleValueAspect/SingleValueAspect.css"
                ],
                "templates": [
                    "/_ideFiles/IDEAspects/SingleValueAspect/SingleValueAspect.html"
                ],
                "menuTemplates": [],
                "components": []
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/SingleValueAspect/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "ExternalMatterSearch",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/ExternalMatterSearch",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/ExternalMatterSearch",
        "type": "widget",
        "designerPath": "",
        "valid": true,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "IDEAspects",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "ExternalMatterSearch.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "IDEAspects.ExternalMatterSearch",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": false,
                    "allowAspectAdapter": true,
                    "title": "External Matter Search",
                    "icon": "fa-cog",
                    "description": "External Matter Search",
                    "categories": [],
                    "isConfigurable": true,
                    "configurationWidget": null,
                    "defaultConfigurationJson": {
                        "title": "Matter Search",
                        "inputVisability": [
                            {
                                "rule": "phaseName().toLowerCase()==='new'"
                            }
                        ],
                        "fackMode": false,
                        "formBuilderFieldSerialisedData": "matterJSON",
                        "selectedFieldDisplayValue": "`${dataContext.matterCode} - ${dataContext.shortName}`",
                        "loadApiResultDataPath": "data",
                        "loadApiUrl": "`/api/proxy/hurricane-api/_/v2/matters/${dataContext.data.matterCode||dataContext.data.code}`",
                        "dataMapping": [
                            {
                                "formBuilderField": "expert-matter-number",
                                "searchResultField": "{dataContext.data.matterCode}"
                            },
                            {
                                "formBuilderField": "expert-matter-number-value",
                                "searchResultField": "{dataContext.data.matterCode}"
                            },
                            {
                                "formBuilderField": "matter-details-ib",
                                "searchResultField": "{dataContext.data.secure}"
                            },
                            {
                                "formBuilderField": "matter-details-name",
                                "searchResultField": "{dataContext.data.shortName}"
                            },
                            {
                                "formBuilderField": "matter-details-client-name",
                                "searchResultField": "{dataContext.data.client.name}"
                            },
                            {
                                "formBuilderField": "matter-details-client-code",
                                "searchResultField": "{dataContext.data.client.code}"
                            },
                            {
                                "formBuilderField": "matter-details-partner-name",
                                "searchResultField": "{dataContext.data.partner.name}"
                            }
                        ],
                        "debug": {
                            "supportRequestEnabled": false,
                            "enabled": true,
                            "logToConsole": true,
                            "showInAspect": false,
                            "liveConfig": true
                        },
                        "searchFields": {
                            "container": {},
                            "icon": [
                                {
                                    "icon": "fa-search fa-2x text-primary"
                                }
                            ],
                            "style": [
                                {
                                    "rule": "dataContext.data.data.status.toLowerCase()==='closed'",
                                    "style": {
                                        "color": "lightgrey"
                                    }
                                }
                            ],
                            "rows": [
                                {
                                    "fields": [
                                        {
                                            "field": "`${dataContext.data.data.matterCode||dataContext.data.data.code}`",
                                            "style": "font-weight:bold",
                                            "icon": [
                                                {
                                                    "rule": "dataContext.data.data.status.toLowerCase()==='open'",
                                                    "icon": "fa-folder-open text-success",
                                                    "position": "before"
                                                },
                                                {
                                                    "rule": "dataContext.data.data.status.toLowerCase()==='closed'",
                                                    "icon": "fa-folder text-danger",
                                                    "position": "before"
                                                }
                                            ],
                                            "width": null
                                        },
                                        {
                                            "style": {
                                                "color": "blue"
                                            },
                                            "field": "dataContext.data.title"
                                        },
                                        {
                                            "field": "dataContext.data.data.status",
                                            "formatter": "value.toUpperCase()",
                                            "label": "Status",
                                            "position": "right",
                                            "width": null
                                        }
                                    ]
                                },
                                {
                                    "fields": [
                                        {
                                            "field": ""
                                        },
                                        {
                                            "label": "Client",
                                            "field": "dataContext.data.data.client",
                                            "width": null
                                        },
                                        {
                                            "field": ""
                                        }
                                    ]
                                }
                            ]
                        },
                        "selectedFields": {
                            "container": {
                                "style": [
                                    {
                                        "rule": "dataContext.data.secure",
                                        "style": {
                                            "box-shadow": "1px 1px 62px #cb8383"
                                        }
                                    },
                                    {
                                        "rule": "!dataContext.data.secure",
                                        "style": {
                                            "box-shadow": "1px 1px 10px #a4a3a3"
                                        }
                                    }
                                ]
                            },
                            "icon": [
                                {
                                    "rule": "dataContext.data.secure",
                                    "icon": "fa-shield text-warning fa-2x",
                                    "position": "before"
                                }
                            ],
                            "rows": [
                                {
                                    "fields": [
                                        {
                                            "field": "dataContext.data.matterCode",
                                            "style": "font-weight:bold",
                                            "icon": [
                                                {
                                                    "rule": "dataContext.data.status.toLowerCase()==='open'",
                                                    "icon": "fa-folder-open text-success",
                                                    "position": "before"
                                                },
                                                {
                                                    "rule": "dataContext.data.status.toLowerCase()==='closed'",
                                                    "icon": "fa-folder text-danger",
                                                    "position": "before"
                                                }
                                            ],
                                            "width": null
                                        },
                                        {
                                            "field": "dataContext.data.shortName",
                                            "width": null,
                                            "style": {
                                                "font-weight": "bold",
                                                "color": "red",
                                                "font-size": "larger"
                                            }
                                        },
                                        {
                                            "field": "dataContext.data.status",
                                            "formatter": "value.toUpperCase()",
                                            "label": "Status",
                                            "position": "right",
                                            "width": null,
                                            "style": "font-weight:bold"
                                        }
                                    ]
                                },
                                {
                                    "fields": [
                                        {
                                            "field": [
                                                {
                                                    "rule": "dataContext.data.secure",
                                                    "field": "'Secured!'"
                                                },
                                                {
                                                    "rule": "!dataContext.data.secure",
                                                    "field": "'Not Secured'"
                                                }
                                            ],
                                            "style": [
                                                {
                                                    "style": {
                                                        "margin-top": "-10px",
                                                        "font-size": "x-small"
                                                    }
                                                },
                                                {
                                                    "rule": "!dataContext.data.secure",
                                                    "style": {
                                                        "color": "green",
                                                        "font-weight": "bold"
                                                    }
                                                },
                                                {
                                                    "rule": "dataContext.data.secure",
                                                    "style": {
                                                        "color": "red",
                                                        "font-weight": "bold"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "style": {
                                                "font-size": "smaller",
                                                "margin-top": "-10px"
                                            },
                                            "field": "dataContext.data.practiceGroup"
                                        },
                                        {
                                            "field": ""
                                        }
                                    ]
                                },
                                {
                                    "fields": [
                                        {
                                            "label": "Client",
                                            "field": "dataContext.data.client.name",
                                            "width": null
                                        },
                                        {
                                            "field": "dataContext.data.client.code",
                                            "width": null,
                                            "style": {}
                                        }
                                    ]
                                },
                                {
                                    "fields": [
                                        {
                                            "label": "Partner",
                                            "field": "dataContext.data.partner.name",
                                            "width": null
                                        },
                                        {
                                            "field": "dataContext.data.partner.code",
                                            "width": null,
                                            "style": {}
                                        }
                                    ]
                                },
                                {
                                    "fields": [
                                        {
                                            "label": "Location",
                                            "field": "dataContext.data.location.country",
                                            "width": null
                                        },
                                        {
                                            "label": "Office",
                                            "field": "dataContext.data.location.office",
                                            "width": null,
                                            "style": {}
                                        },
                                        {
                                            "label": "Region",
                                            "field": "dataContext.data.location.region",
                                            "width": null,
                                            "style": {}
                                        }
                                    ]
                                }
                            ]
                        },
                        "searchApiExecutionSettings": [
                            {
                                "method": "GET",
                                "url": "/api/proxy/hurricane-api/_/v1/find?q={searchTerm}&engines=MBN",
                                "resultDataPath": "data[0].results",
                                "name": "Matter Number"
                            },
                            {
                                "method": "GET",
                                "url": "/api/proxy/hurricane-api/_/v1/find?q={searchTerm}&engines=MBC",
                                "resultDataPath": "data[0].results",
                                "name": "Matter Content"
                            }
                        ],
                        "eventsToReactTo": [],
                        "dataSettings": {
                            "getValueUsingParents": false,
                            "maxDepth": 0
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.js"
                ],
                "styles": [
                    "/_ideFiles/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.css"
                ],
                "templates": [
                    "/_ideFiles/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.html"
                ],
                "menuTemplates": [],
                "components": [
                    "Sharedo.UI.Framework.Components.AutoComplete",
                    "Sharedo.Core.Case.TextEditor.Component",
                    "Sharedo.UI.Framework.Components.SyntaxEditor"
                ]
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/ExternalMatterSearch/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "LargeFiles",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/LargeFiles",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/LargeFiles",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "WorkflowActions",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/LargeFiles/"
    },
    {
        "name": "CustomProgressMilestone",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CustomProgressMilestone",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/CustomProgressMilestone",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "WorkflowActions",
        "erros": [
            "No Main File CustomProgressMilestone.ts Found"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/CustomProgressMilestone/"
    },
    {
        "name": "IsSharedoInPhaseWithFeature",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/IsSharedoInPhaseWithFeature",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/IsSharedoInPhaseWithFeature",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "WorkflowActions",
        "erros": [
            "No Main File IsSharedoInPhaseWithFeature.ts Found"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/"
    },
    {
        "name": "RecursiveFindAttribute",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/RecursiveFindAttribute",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/RecursiveFindAttribute",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "WorkflowActions",
        "erros": [
            "No Main File RecursiveFindAttribute.ts Found"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/RecursiveFindAttribute/"
    },
    {
        "name": "CreateTaskv2",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CreateTaskv2",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/CreateTaskv2",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "WorkflowActions",
        "erros": [
            "No Main File CreateTaskv2.ts Found"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/CreateTaskv2/"
    },
    {
        "name": "RefreshWatcher",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/PortalWidgets/RefreshWatcher",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "PortalWidgets",
        "erros": [
            "Invalid ! No manifest file found",
            "Invalid ! No Manifest file found"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "RefreshWatcher.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher/RefreshWatcher.ts",
            "success": true
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/PortalWidgets/RefreshWatcher/"
    }
]