[
    {
        "name": "OdsPicker",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/OdsPicker",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/OdsPicker",
        "type": "",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "IDEAspects",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/OdsPicker/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "DatePickerAspect",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/DatePickerAspect",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/DatePickerAspect",
        "type": "widget",
        "designerPath": "",
        "valid": true,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "IDEAspects",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "DatePickerAspect.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/DatePickerAspect/DatePickerAspect.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "IDEAspects.DatePickerAspect",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": false,
                    "allowAspectAdapter": true,
                    "title": "Date Picker Aspect",
                    "icon": "fa-cog",
                    "description": "Date Picker Aspect",
                    "categories": [],
                    "isConfigurable": true,
                    "configurationWidget": null,
                    "defaultConfigurationJson": {
                        "configuration": {
                            "formBuilderField": "eDiscoveryUpdatePlannedDate",
                            "hideInputBox": true,
                            "defaultValue": {
                                "defaultDateFromNowHours": 24
                            },
                            "title": "Updated planned due date:",
                            "pickerEnabled": true,
                            "eventToFireOnUpdate": [
                                "IDEAspects.DatePickerAspect.Update"
                            ],
                            "datePickerOptions": {
                                "display": {
                                    "inline": true,
                                    "sideBySide": true,
                                    "theme": "light"
                                }
                            },
                            "debug": {
                                "supportRequestEnabled": false,
                                "enabled": true,
                                "logToConsole": true,
                                "showInAspect": false,
                                "liveConfig": false
                            },
                            "refreshOn": {
                                "sharedoIdChanged": false,
                                "sharedoParentIdChanged": false,
                                "sharedoPhaseChanged": false
                            },
                            "eventsToReactTo": [],
                            "dataSettings": {
                                "getValueUsingParents": false,
                                "maxDepth": 0
                            }
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/IDEAspects/DatePickerAspect/DatePickerAspect.js"
                ],
                "styles": [
                    "/_ideFiles/IDEAspects/DatePickerAspect/DatePickerAspect.css"
                ],
                "templates": [
                    "/_ideFiles/IDEAspects/DatePickerAspect/DatePickerAspect.html"
                ],
                "menuTemplates": [],
                "components": []
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/DatePickerAspect/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "SingleValueAspect",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/SingleValueAspect",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/SingleValueAspect",
        "type": "widget",
        "designerPath": "",
        "valid": true,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "IDEAspects",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "SingleValueAspect.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/SingleValueAspect/SingleValueAspect.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "IDEAspects.SingleValueAspect",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": true,
                    "allowAspectAdapter": true,
                    "title": "Single Value Aspect",
                    "icon": "fa-cog",
                    "description": "Single Value Aspect",
                    "categories": [
                        "UD - IDEAspects"
                    ],
                    "isConfigurable": true,
                    "configurationWidget": null,
                    "defaultConfigurationJson": {
                        "configuration": {
                            "fieldPath": "title",
                            "title": null,
                            "calculatedValue": "",
                            "calculatedTitle": "",
                            "valueOnNotFound": "Not Found",
                            "formatter": "value",
                            "debug": {
                                "supportRequestEnabled": false,
                                "enabled": true,
                                "logToConsole": true,
                                "showInAspect": false,
                                "liveConfig": false
                            },
                            "eventsToReactTo": [
                                {
                                    "eventPath": "sharedo.core.case.phase-changed",
                                    "methodToCall": "loadAndBind"
                                },
                                {
                                    "eventPath": "sharedo.core.case.forms.phase.phase-changed",
                                    "methodToCall": "loadAndBind"
                                },
                                {
                                    "eventPath": "sharedo.updated",
                                    "methodToCall": "loadAndBind"
                                },
                                {
                                    "eventPath": "sharedo.core.case.sharedo-updated",
                                    "methodToCall": "loadAndBind"
                                }
                            ],
                            "refreshOn": {
                                "sharedoIdChanged": true,
                                "sharedoParentIdChanged": true,
                                "sharedoPhaseChanged": true
                            },
                            "dataSettings": {
                                "getValueUsingParents": false,
                                "maxDepth": 0
                            }
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/IDEAspects/SingleValueAspect/SingleValueAspect.js"
                ],
                "styles": [
                    "/_ideFiles/IDEAspects/SingleValueAspect/SingleValueAspect.css"
                ],
                "templates": [
                    "/_ideFiles/IDEAspects/SingleValueAspect/SingleValueAspect.html"
                ],
                "menuTemplates": [],
                "components": []
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/SingleValueAspect/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "ExternalMatterSearch",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/ExternalMatterSearch",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/IDEAspects/ExternalMatterSearch",
        "type": "widget",
        "designerPath": "",
        "valid": true,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "IDEAspects",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "tsFileName": "ExternalMatterSearch.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "IDEAspects.ExternalMatterSearch",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": false,
                    "allowAspectAdapter": true,
                    "title": "External Matter Search",
                    "icon": "fa-cog",
                    "description": "External Matter Search",
                    "categories": [],
                    "isConfigurable": true,
                    "configurationWidget": null,
                    "defaultConfigurationJson": {
                        "configuration": {
                            "title": "Matter Search",
                            "showSearchingStatus": true,
                            "inputVisability": [
                                {
                                    "rule": "dataContext.phaseName ? dataContext.phaseName.toLowerCase()==='new' : true"
                                }
                            ],
                            "fackMode": false,
                            "formBuilderName": "custom-alt-ediscovery-instruction-matter-details",
                            "formBuilderFieldSerialisedData": "matterJSON",
                            "selectedFieldDisplayValue": "${dataContext.matterCode} - ${dataContext.shortName}",
                            "loadApiResultDataPath": "data",
                            "loadApiUrl": "/api/proxy/hurricane-api/_/v2/matters/${dataContext.data.matterCode||dataContext.data.code}",
                            "dataMapping": [
                                {
                                    "formBuilderField": "expert-matter-number",
                                    "searchResultField": "${dataContext.data.matterCode}"
                                },
                                {
                                    "formBuilderField": "expert-matter-number-value",
                                    "searchResultField": "${dataContext.data.matterCode}"
                                },
                                {
                                    "formBuilderField": "matter-details-ib",
                                    "searchResultField": "${dataContext.data.secure}"
                                },
                                {
                                    "formBuilderField": "matter-details-name",
                                    "searchResultField": "${dataContext.data.shortName}"
                                },
                                {
                                    "formBuilderField": "matter-details-client-name",
                                    "searchResultField": "${dataContext.data.client.name}"
                                },
                                {
                                    "formBuilderField": "matter-details-client-code",
                                    "searchResultField": "${dataContext.data.client.code}"
                                },
                                {
                                    "formBuilderField": "matter-details-partner-name",
                                    "searchResultField": "${dataContext.data.partner.name}"
                                }
                            ],
                            "fieldMapping": [
                                {
                                    "formBuilderField": "jurisdictions-country",
                                    "searchResultField": "${dataContext.data.location.country}"
                                }
                            ],
                            "debug": {
                                "supportRequestEnabled": false,
                                "enabled": true,
                                "logToConsole": true,
                                "showInAspect": false,
                                "liveConfig": false
                            },
                            "searchFields": {
                                "container": {},
                                "icon": [
                                    {
                                        "icon": "fa-search fa-2x text-primary"
                                    }
                                ],
                                "style": [
                                    {
                                        "rule": "dataContext.data.data.status.toLowerCase()==='closed'",
                                        "style": {
                                            "color": "lightgrey"
                                        }
                                    }
                                ],
                                "rows": [
                                    {
                                        "fields": [
                                            {
                                                "field": "${dataContext.data.data.matterCode||dataContext.data.data.code}",
                                                "style": "font-weight:bold",
                                                "icon": [
                                                    {
                                                        "rule": "dataContext.data.data.status.toLowerCase()==='open'",
                                                        "icon": "fa-folder-open text-success",
                                                        "position": "before"
                                                    },
                                                    {
                                                        "rule": "dataContext.data.data.status.toLowerCase()==='closed'",
                                                        "icon": "fa-folder text-danger",
                                                        "position": "before"
                                                    }
                                                ],
                                                "width": null
                                            },
                                            {
                                                "style": {
                                                    "color": "blue"
                                                },
                                                "field": "${dataContext.data.title}"
                                            },
                                            {
                                                "field": "${dataContext.data.data.status}",
                                                "formatter": "value.toUpperCase()",
                                                "label": "Status",
                                                "position": "right",
                                                "width": null
                                            }
                                        ]
                                    },
                                    {
                                        "fields": [
                                            {
                                                "field": ""
                                            },
                                            {
                                                "label": "Client",
                                                "field": "${dataContext.data.data.client}",
                                                "width": null
                                            },
                                            {
                                                "field": ""
                                            }
                                        ]
                                    }
                                ]
                            },
                            "selectedFields": {
                                "container": {
                                    "style": [
                                        {
                                            "rule": "dataContext.data.secure",
                                            "style": {
                                                "box-shadow": "1px 1px 62px #cb8383"
                                            }
                                        },
                                        {
                                            "rule": "!dataContext.data.secure",
                                            "style": {
                                                "box-shadow": "1px 1px 10px #a4a3a3"
                                            }
                                        }
                                    ]
                                },
                                "icon": [
                                    {
                                        "rule": "dataContext.data.secure",
                                        "icon": "fa-shield text-warning fa-2x",
                                        "position": "before"
                                    }
                                ],
                                "rows": [
                                    {
                                        "fields": [
                                            {
                                                "field": "${dataContext.data.matterCode}",
                                                "style": "font-weight:bold",
                                                "icon": [
                                                    {
                                                        "rule": "dataContext.data.status.toLowerCase()==='open'",
                                                        "icon": "fa-folder-open text-success",
                                                        "position": "before"
                                                    },
                                                    {
                                                        "rule": "dataContext.data.status.toLowerCase()==='closed'",
                                                        "icon": "fa-folder text-danger",
                                                        "position": "before"
                                                    }
                                                ],
                                                "width": null
                                            },
                                            {
                                                "field": "${dataContext.data.shortName}",
                                                "width": null,
                                                "style": {
                                                    "font-weight": "bold",
                                                    "color": "red",
                                                    "font-size": "larger"
                                                }
                                            },
                                            {
                                                "field": "${dataContext.data.status}",
                                                "formatter": "value.toUpperCase()",
                                                "label": "Status",
                                                "position": "right",
                                                "width": null,
                                                "style": "font-weight:bold"
                                            }
                                        ]
                                    },
                                    {
                                        "fields": [
                                            {
                                                "field": [
                                                    {
                                                        "rule": "dataContext.data.secure",
                                                        "field": "Secured!"
                                                    },
                                                    {
                                                        "rule": "!dataContext.data.secure",
                                                        "field": "Not Secured"
                                                    }
                                                ],
                                                "style": [
                                                    {
                                                        "style": {
                                                            "margin-top": "-10px",
                                                            "font-size": "x-small"
                                                        }
                                                    },
                                                    {
                                                        "rule": "!dataContext.data.secure",
                                                        "style": {
                                                            "color": "green",
                                                            "font-weight": "bold"
                                                        }
                                                    },
                                                    {
                                                        "rule": "dataContext.data.secure",
                                                        "style": {
                                                            "color": "red",
                                                            "font-weight": "bold"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "style": {
                                                    "font-size": "smaller",
                                                    "margin-top": "-10px"
                                                },
                                                "field": "${dataContext.data.practiceGroup}"
                                            },
                                            {
                                                "field": ""
                                            }
                                        ]
                                    },
                                    {
                                        "fields": [
                                            {
                                                "label": "Client",
                                                "field": "${dataContext.data.client.name}",
                                                "width": null
                                            },
                                            {
                                                "field": "${dataContext.data.client.code}",
                                                "width": null,
                                                "style": {}
                                            }
                                        ]
                                    },
                                    {
                                        "fields": [
                                            {
                                                "label": "Partner",
                                                "field": "${dataContext.data.partner.name}",
                                                "width": null
                                            },
                                            {
                                                "field": "${dataContext.data.partner.code}",
                                                "width": null,
                                                "style": {}
                                            }
                                        ]
                                    },
                                    {
                                        "fields": [
                                            {
                                                "label": "Location",
                                                "field": "${dataContext.data.location.country}",
                                                "width": null
                                            },
                                            {
                                                "label": "Office",
                                                "field": "${dataContext.data.location.office}",
                                                "width": null,
                                                "style": {}
                                            },
                                            {
                                                "label": "Region",
                                                "field": "${dataContext.data.location.region}",
                                                "width": null,
                                                "style": {}
                                            }
                                        ]
                                    }
                                ]
                            },
                            "searchApiExecutionSettings": [
                                {
                                    "method": "GET",
                                    "url": "/api/proxy/hurricane-api/_/v1/find?q=${dataContext.searchTerm}&engines=MBN",
                                    "resultDataPath": "data[0].results",
                                    "name": "Aderant Matter Content"
                                },
                                {
                                    "method": "GET",
                                    "url": "/api/proxy/hurricane-api/_/v1/find?q=${dataContext.searchTerm}&engines=MBC",
                                    "resultDataPath": "data[0].results",
                                    "name": "AAderant Matter Number"
                                }
                            ],
                            "refreshOn": {
                                "sharedoIdChanged": true,
                                "sharedoParentIdChanged": true,
                                "sharedoPhaseChanged": false
                            },
                            "eventsToReactTo": [],
                            "dataSettings": {
                                "getValueUsingParents": false,
                                "maxDepth": 0
                            }
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.js"
                ],
                "styles": [
                    "/_ideFiles/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.css"
                ],
                "templates": [
                    "/_ideFiles/IDEAspects/ExternalMatterSearch/ExternalMatterSearch.html"
                ],
                "menuTemplates": [],
                "components": [
                    "Sharedo.UI.Framework.Components.AutoComplete",
                    "Sharedo.Core.Case.TextEditor.Component",
                    "Sharedo.UI.Framework.Components.SyntaxEditor"
                ]
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/IDEAspects/ExternalMatterSearch/",
        "generatDefaultConfigurationJson": true
    },
    {
        "name": "LargeFiles",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/LargeFiles",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/LargeFiles",
        "type": "workflow",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "WorkflowActions",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/LargeFiles/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "CustomProgressMilestone",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CustomProgressMilestone",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/CustomProgressMilestone",
        "type": "wf-action",
        "designerPath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CustomProgressMilestone/Designer",
        "valid": true,
        "manifestFilePath": "",
        "designerManifestFilePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CustomProgressMilestone/Designer/manifest.widget.json",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "WorkflowActions",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "CustomProgressMilestoneDesigner.ts",
        "designerTSFilePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CustomProgressMilestone/Designer/CustomProgressMilestoneDesigner.ts",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "designerManifestJSON": {
            "id": "WorkflowActions.CustomProgressMilestoneDesigner",
            "priority": 6000,
            "designer": {
                "allowInPortalDesigner": false,
                "allowInSharedoPortalDesigner": false
            },
            "scripts": [
                "/_ideFiles/WorkflowActions/CustomProgressMilestone/Designer/CustomProgressMilestoneDesigner.js"
            ],
            "styles": [
                "/_ideFiles/WorkflowActions/CustomProgressMilestone/Designer/CustomProgressMilestoneDesigner.css"
            ],
            "templates": [
                "/_ideFiles/WorkflowActions/CustomProgressMilestone/Designer/CustomProgressMilestoneDesigner.html"
            ],
            "menuTemplates": [],
            "components": [
                "Sharedo.Core.Case.Components.SharedoTypePicker"
            ]
        },
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "type": "wf-action",
            "success": true,
            "manifest": {
                "systemName": "WorkflowActions.CustomProgressMilestone",
                "category": "Actions",
                "name": "Custom Dynamic Progress milestone",
                "icon": "fa-forward",
                "description": "Transition a work item to another phase with Dynamic values",
                "configWidget": "WorkflowActions.CustomProgressMilestoneDesigner",
                "factoryIncludes": [],
                "factoryScript": "/_ideFiles/WorkflowActions/CustomProgressMilestone/CustomProgressMilestone-factory.js",
                "templateScript": "/_ideFiles/WorkflowActions/CustomProgressMilestone/CustomProgressMilestone-template.js",
                "helperScripts": [
                    "PhaseHelpers",
                    "StringHelpers"
                ],
                "requiredTypes": [
                    "/Identifier/Work Type Identifier"
                ]
            },
            "manifestFileName": "CustomProgressMilestone.wf-action.json",
            "manifestFilePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CustomProgressMilestone/CustomProgressMilestone.wf-action.json"
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/CustomProgressMilestone/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "IsSharedoInPhaseWithFeature",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/IsSharedoInPhaseWithFeature",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/IsSharedoInPhaseWithFeature",
        "type": "wf-action",
        "designerPath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/IsSharedoInPhaseWithFeature/Designer",
        "valid": true,
        "manifestFilePath": "",
        "designerManifestFilePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/IsSharedoInPhaseWithFeature/Designer/manifest.widget.json",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "WorkflowActions",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "IsSharedoInPhaseWithFeatureDesigner.ts",
        "designerTSFilePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/IsSharedoInPhaseWithFeature/Designer/IsSharedoInPhaseWithFeatureDesigner.ts",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "designerManifestJSON": {
            "id": "WorkflowActions.IsSharedoInPhaseWithFeatureDesigner",
            "priority": 6000,
            "designer": {
                "allowInPortalDesigner": false,
                "allowInSharedoPortalDesigner": false
            },
            "scripts": [
                "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/Designer/IsSharedoInPhaseWithFeatureDesigner.js"
            ],
            "styles": [
                "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/Designer/IsSharedoInPhaseWithFeatureDesigner.css"
            ],
            "templates": [
                "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/Designer/IsSharedoInPhaseWithFeatureDesigner.html"
            ],
            "menuTemplates": [],
            "components": [
                "Sharedo.Core.Case.Components.SharedoTypePicker"
            ]
        },
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "type": "wf-action",
            "success": true,
            "manifest": {
                "systemName": "WorkflowActions.IsSharedoInPhaseWithFeature",
                "category": "Actions",
                "name": "Is Sharedo In Phase With Feature",
                "icon": "fa-forward",
                "description": "Checks if a Sharedo is in a phase with a specific feature.",
                "configWidget": "WorkflowActions.IsSharedoInPhaseWithFeatureDesigner",
                "factoryIncludes": [],
                "factoryScript": "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/IsSharedoInPhaseWithFeature-factory.js",
                "templateScript": "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/IsSharedoInPhaseWithFeature-template.js",
                "helperScripts": [
                    "PhaseHelpers",
                    "StringHelpers"
                ],
                "requiredTypes": [
                    "/Identifier/Work Type Identifier"
                ]
            },
            "manifestFileName": "IsSharedoInPhaseWithFeature.wf-action.json",
            "manifestFilePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/IsSharedoInPhaseWithFeature/IsSharedoInPhaseWithFeature.wf-action.json"
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/IsSharedoInPhaseWithFeature/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "RecursiveFindAttribute",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/RecursiveFindAttribute",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/RecursiveFindAttribute",
        "type": "workflow",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "WorkflowActions",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/RecursiveFindAttribute/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "CreateTaskv2",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CreateTaskv2",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/CreateTaskv2",
        "type": "workflow",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "WorkflowActions",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/CreateTaskv2/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "CreateCallToAction",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CreateCallToAction",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/CreateCallToAction",
        "type": "workflow",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "WorkflowActions",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/CreateCallToAction/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "CreateActionPlan",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/NodeBased/WorkflowActions/CreateActionPlan",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/WorkflowActions/CreateActionPlan",
        "type": "workflow",
        "designerPath": "",
        "valid": false,
        "manifestFilePath": "",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": false,
        "namespace": "WorkflowActions",
        "erros": [
            "Target is disabled"
        ],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "",
        "designerTSFilePath": "",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "tsFileInfo": {
            "success": false
        },
        "manifestInfo": {
            "success": false
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/WorkflowActions/CreateActionPlan/",
        "generatDefaultConfigurationJson": false
    },
    {
        "name": "RefreshWatcher",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/PortalWidgets/RefreshWatcher",
        "type": "widget",
        "designerPath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher/Designer",
        "valid": true,
        "manifestFilePath": "",
        "designerManifestFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher/Designer/RefreshWatcherDesigner.widget.json",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "PortalWidgets",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "RefreshWatcherDesigner.ts",
        "designerTSFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher/Designer/RefreshWatcherDesigner.ts",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "designerManifestJSON": {
            "id": "PortalWidgets.RefreshWatcherDesigner",
            "designer": {
                "allowInPortalDesigner": false,
                "allowInSharedoPortalDesigner": false
            },
            "scripts": [
                "/_ideFiles/PortalWidgets/RefreshWatcher/Designer/RefreshWatcherDesigner.js"
            ],
            "styles": [
                "/_ideFiles/PortalWidgets/RefreshWatcher/Designer/RefreshWatcherDesigner.css"
            ],
            "templates": [
                "/_ideFiles/PortalWidgets/RefreshWatcher/Designer/RefreshWatcherDesigner.html"
            ],
            "menuTemplates": [],
            "components": []
        },
        "tsFileInfo": {
            "tsFileName": "RefreshWatcher.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher/RefreshWatcher.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "PortalWidgets.RefreshWatcher",
                "designer": {
                    "allowInPortalDesigner": false,
                    "allowInSharedoPortalDesigner": true,
                    "title": "Refresh Watcher",
                    "icon": "fa-calendar",
                    "description": "Refreshes specified components on events or at specified intervals.",
                    "categories": [
                        "Custom Widgets"
                    ],
                    "isConfigurable": true,
                    "configurationWidget": "PortalWidgets.RefreshWatcherDesigner"
                },
                "scripts": [
                    "/_ideFiles/PortalWidgets/RefreshWatcher/RefreshWatcher.js"
                ],
                "styles": [
                    "/_ideFiles/PortalWidgets/RefreshWatcher/RefreshWatcher.css"
                ],
                "templates": [
                    "/_ideFiles/PortalWidgets/RefreshWatcher/RefreshWatcher.html"
                ],
                "menuTemplates": []
            },
            "manifestFileName": "RefreshWatcher.widget.json",
            "manifestFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/RefreshWatcher/RefreshWatcher.widget.json"
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/PortalWidgets/RefreshWatcher/"
    },
    {
        "name": "SingleValuePortalWidget",
        "sourcePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/SingleValuePortalWidget",
        "deployPath": "/Users/igorsharedo/Desktop/Test/_IDE/PortalWidgets/SingleValuePortalWidget",
        "type": "widget",
        "designerPath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/SingleValuePortalWidget/Designer",
        "valid": true,
        "manifestFilePath": "",
        "designerManifestFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/SingleValuePortalWidget/Designer/SingleValuePortalWidgetDesigner.widget.json",
        "modulesToExtract": [
            {
                "modules": [
                    "lodash"
                ],
                "extractedFileName": "lodash.js"
            }
        ],
        "bundleAnalyzer": false,
        "enabled": true,
        "namespace": "PortalWidgets",
        "erros": [],
        "widgetTSFileName": "",
        "factoryTSFileName": "",
        "factoryTSFilePath": "",
        "templateTsFileName": "",
        "templateTsFilePath": "",
        "cssFiles": [],
        "htmlFiles": [],
        "designerTSFileName": "SingleValuePortalWidgetDesigner.ts",
        "designerTSFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/SingleValuePortalWidget/Designer/SingleValuePortalWidgetDesigner.ts",
        "designerCSSFiles": [],
        "designerHTMLFiles": [],
        "designerManifestJSON": {
            "id": "PortalWidgets.SingleValuePortalWidgetDesigner",
            "designer": {
                "allowInPortalDesigner": false,
                "allowInSharedoPortalDesigner": false
            },
            "scripts": [
                "/_ideFiles/PortalWidgets/SingleValuePortalWidget/Designer/SingleValuePortalWidgetDesigner.js"
            ],
            "styles": [
                "/_ideFiles/PortalWidgets/SingleValuePortalWidget/Designer/SingleValuePortalWidgetDesigner.css"
            ],
            "templates": [
                "/_ideFiles/PortalWidgets/SingleValuePortalWidget/Designer/SingleValuePortalWidgetDesigner.html"
            ],
            "menuTemplates": [],
            "components": []
        },
        "tsFileInfo": {
            "tsFileName": "SingleValuePortalWidget.ts",
            "tsFilePath": "/Users/igorsharedo/Desktop/Test/src/WebBased/PortalWidgets/SingleValuePortalWidget/SingleValuePortalWidget.ts",
            "success": true
        },
        "manifestInfo": {
            "type": "widget",
            "success": true,
            "manifest": {
                "id": "PortalWidgets.SingleValuePortalWidget",
                "type": "widget",
                "priority": 6000,
                "designer": {
                    "allowInPortalDesigner": true,
                    "allowInSharedoPortalDesigner": true,
                    "allowAspectAdapter": false,
                    "title": "Single Value Portal Widget",
                    "icon": "fa-cog",
                    "description": "Show a single value in a portal widget",
                    "categories": [
                        "UD - IDEAspects"
                    ],
                    "isConfigurable": true,
                    "configurationWidget": "PortalWidgets.SingleValuePortalWidgetDesigner",
                    "defaultConfigurationJson": {
                        "configuration": {
                            "fieldPath": "title",
                            "title": null,
                            "calculatedValue": "",
                            "calculatedTitle": "",
                            "valueOnNotFound": "Not Found",
                            "formatter": "value",
                            "debug": {
                                "supportRequestEnabled": false,
                                "enabled": true,
                                "logToConsole": true,
                                "showInAspect": false,
                                "liveConfig": false
                            },
                            "eventsToReactTo": [
                                {
                                    "eventPath": "sharedo.core.case.phase-changed",
                                    "methodToCall": "loadAndBind"
                                },
                                {
                                    "eventPath": "sharedo.core.case.forms.phase.phase-changed",
                                    "methodToCall": "loadAndBind"
                                },
                                {
                                    "eventPath": "sharedo.updated",
                                    "methodToCall": "loadAndBind"
                                },
                                {
                                    "eventPath": "sharedo.core.case.sharedo-updated",
                                    "methodToCall": "loadAndBind"
                                }
                            ],
                            "refreshOn": {
                                "sharedoIdChanged": true,
                                "sharedoParentIdChanged": true,
                                "sharedoPhaseChanged": true
                            },
                            "dataSettings": {
                                "getValueUsingParents": false,
                                "maxDepth": 0
                            }
                        }
                    }
                },
                "scripts": [
                    "/_ideFiles/PortalWidgets/SingleValuePortalWidget/SingleValuePortalWidget.js"
                ],
                "styles": [
                    "/_ideFiles/PortalWidgets/SingleValuePortalWidget/SingleValuePortalWidget.css"
                ],
                "templates": [
                    "/_ideFiles/PortalWidgets/SingleValuePortalWidget/SingleValuePortalWidget.html"
                ],
                "menuTemplates": [],
                "components": []
            }
        },
        "designerManifestInfo": {
            "success": false
        },
        "tsDesignerFileInfo": {
            "success": false
        },
        "publicPath": "/_ideFiles/PortalWidgets/SingleValuePortalWidget/",
        "generatDefaultConfigurationJson": true
    }
]