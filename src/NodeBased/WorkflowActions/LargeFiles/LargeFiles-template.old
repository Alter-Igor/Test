
interface IEmailAttachments {
  relatedDocument: IRelatedDocument
  fileSize: number

}

 
function getEmailAttachments(): Array<IEmailAttachments> {

  let retValue = new Array<IEmailAttachments>();

  let outboundEmailWorkTypeId = ctx["outboundEmailWorkTypeId"];

  outboundEmailWorkTypeId = "0986b02d-8d16-4995-b514-b042006c2d0d"; //for testing

  var relatedDocumentsResult = sharedo.http.get("/api/sharedo/".concat(outboundEmailWorkTypeId, "/relatedDocuments"));

  log.Information("result: " + JSON.stringify(relatedDocumentsResult));

  if (!relatedDocumentsResult.success) {
    log.Error("failed to get related documents");
    return retValue;
  }



  log.Information("result.body: " + JSON.stringify(relatedDocumentsResult.body));

  let relatedDocument: IRelatedDocument[] = relatedDocumentsResult.body;

  if (relatedDocument.length === 0) {
    log.Information("No related document found");
    return retValue;
  }


  //{\"Id\":\"5883f9cb-36b6-451e-ab73-b013004ea7b1\"}
  //Extract the repository for the related documents from the first entry
  let repositoryContext = JSON.parse(relatedDocument[0].repositoryContext);
  let repositoryContextId = repositoryContext.Id;

  //Get all the repository document list which includes the sizes 
  let repositoryDocumentsResult = sharedo.http.get("/api/repository/matter-documents/?Id=" + repositoryContextId);

  if (!repositoryDocumentsResult.success) {
    log.Error("failed to get related documents repository documents");
    log.Information("result: " + JSON.stringify(repositoryDocumentsResult));
    return retValue;
  }


  let repositoryDocuments: IGetMatterDocumentsResponse = repositoryDocumentsResult.body;



  //Loop through the related documents and find the matching repository document
  for (let i = 0; i < relatedDocument.length; i++) {
    let relatedDoc = relatedDocument[i];

    //find the repository document
    let repositoryDoc = repositoryDocuments.items.find(x => x.id === relatedDoc.documentId);

    if (!repositoryDoc) { continue }

    let emailAttachment: IEmailAttachments = {
      relatedDocument: relatedDoc,
      fileSize: repositoryDoc.size || 0
    };

    retValue.push(emailAttachment);
  }

  return retValue;
}
 


let emailAttachments = getEmailAttachments();

for(let i = 0; i < emailAttachments.length; i++) {
  let emailAttachment = emailAttachments[i];
  log.Information("emailAttachment: " + JSON.stringify(emailAttachment));
}