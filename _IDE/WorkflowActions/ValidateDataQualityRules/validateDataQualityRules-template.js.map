{"version":3,"file":"validateDataQualityRules-template.js","names":["log","Information","taskId","ctx","Error","existingAp","existingApId","getExistingActionPlanId","actionPlanBuilder","actions","sharedo","BuildActionPlan","ForSharedo","WithTitle","buildString","ForExistingActionPlan","obj","key","JSON","stringify","itemsAsString","items","slice","sort","a","b","Number","parseInt","order","forEach","i","description","type","actionPlanItem","buildActionPlan","AddItem","Build","Save","actionPlanModel","actionPlan","BuildActionPlanItem","WithDescription","AddCheckbox","AddInformation","AddHeader","mandatory","MarkRequired","WithOrder","callToActionVar","callToAction","Warning","cta","buildCallToAction","WithCallToAction","plan","callToActionModel","BuildCallToAction","WithDisplay","title","styles","WithStyles","CallToActionContextType","contextType","contextIdVariable","contextId","Guid","Parse","CallToActionContextId","CallToActionCommand","command","commandConfig","CallToActionCommandConfiguration","icon","CallToActionIcon","css","CallToActionCss","id","result","http","get","success","body","undefined"],"sources":["../../../src/NodeBased/WorkflowActions/ValidateDataQualityRules/validateDataQualityRules-template.ts"],"sourcesContent":["ï»¿(() => {\n    log.Information(\"---- ValidateDataQualityRules-template ----\");\n    let taskId = ctx[\"$model.Configuration.taskId;\"];\n    if (!taskId) {\n        throw new Error(\"Task id was not provided\");\n    }\n\n    log.Information(\"taskId: \" + taskId);\n    let existingAp = false;\n    let existingApId = getExistingActionPlanId(taskId);\n    if(existingApId)\n    {\n         existingAp = true\n    }\n\n    let actionPlanBuilder = actions.sharedo.BuildActionPlan().ForSharedo(taskId);\n    // let actionPlan = actionPlanBuilder.ActionPlan;\n    // //Note Id is always empty so use title\n    // log.Information(\"actionPlan: \" + JSON.stringify(actionPlan));\n    // let apId;\n    // if (actionPlan && actionPlan.Title) { //must only be == not ===     \n    //     log.Information(\"Existing action plan found\");\n    //     actionPlanBuilder = actionPlanBuilder.ForExistingActionPlan(actionPlan.Id);\n    //     existingAp = true;\n    // }\n\n    if (!existingAp) {\n        log.Information(\"No existing action plan found so creation one\");\n\n        actionPlanBuilder.WithTitle(sharedo.buildString(\"$model.Configuration.actionPlanTitle;\"));\n    }\n    else{\n        actionPlanBuilder.ForExistingActionPlan();\n    }\n\n    let obj = actionPlanBuilder;\n    for (let key in obj) {\n        if (typeof obj[key] === 'function') {\n            log.Information(\"function \" + key);\n        }\n        else {\n            log.Information(key + \" : \" + obj[key]);\n            log.Information(JSON.stringify(obj[key]));\n        }\n    }\n\n    // Add action plan items\n    // $ifNotNull.Configuration.actionPlanItemsList\n    {\n        let itemsAsString = ctx[\"$model.Configuration.actionPlanItemsList\"] as IActionPlan[];\n\n        log.Information('*** itemsAsString:');\n        log.Information(JSON.stringify(itemsAsString));\n\n        if (itemsAsString) {\n            let items = itemsAsString;//JSON.parse(itemsAsString) as Array<any>;\n            items.slice()\n                .sort((a, b) => Number.parseInt(a.order, 10) - Number.parseInt(b.order, 10))\n                .forEach(function (i) {\n                    log.Information('*** i:');\n                    log.Information('description: ' + i.description);\n                    log.Information('type: ' + i.type);\n                    log.Information('order: ' + i.order);\n                    log.Information('**********');\n                    let actionPlanItem = buildActionPlan(i);\n                    log.Information('*** actionPlanItem:');\n                    log.Information(JSON.stringify(actionPlanItem));\n\n                    actionPlanBuilder = actionPlanBuilder.AddItem(actionPlanItem);\n                });\n        }\n    }\n    // $endif\n\n    log.Information('*** actionPlanBuilder:');\n    actionPlanBuilder = actionPlanBuilder.Build();\n\n    // $endif\n\n\n\n    //loop though object and show all method and properties\n\n\n    log.Information(\"----- save -------\");\n\n    actionPlanBuilder.Save();\n    // ()=>{\n\n    // let taskId = ctx[\"$model.Configuration.taskId\"];\n    // if(!taskId) {\n    //     throw new Error(\"Task id was not provided\");\n    // }\n\n \n    // {\n    //     // Add action plan\n    //     let actionPlanBuilder = task\n    //         .WithActionPlan()\n    //         .WithTitle(sharedo.buildString(\"$model.Configuration.actionPlanTitle;\"));\n\n\n    // task.Save();\n\n    // log.Information('*** task:');\n    // log.Information(JSON.stringify(task));\n\n\n\n\n    function buildActionPlan(actionPlanModel: IActionPlan): any {\n        log.Information(\"*** function buildActionPlan()\");\n        let actionPlan = actions.sharedo.BuildActionPlanItem();\n\n        actionPlan = actionPlan.WithDescription(actionPlanModel.description);\n\n        let type = actionPlanModel.type;\n\n        if (type === \"checkbox\") {\n            actionPlan = actionPlan.AddCheckbox();\n        }\n\n        if (type === \"infobox\") {\n            actionPlan = actionPlan.AddInformation();\n        }\n\n        if (type === \"header\") {\n            actionPlan = actionPlan.AddHeader();\n        }\n\n        if (actionPlanModel.mandatory) {\n            actionPlan = actionPlan.MarkRequired();\n        }\n\n        let order = actionPlanModel.order;\n        actionPlan = actionPlan.WithOrder(order);\n\n\n        if (actionPlanModel.callToActionVar) {\n            let callToAction = actionPlanModel.callToActionVar;\n            if (!callToAction) {\n                log.Warning(\"Create action plan - a call to action variable ($model.Configuration.callToActionVar) was specified but was empty\");\n            }\n            else {\n                let cta = buildCallToAction(callToAction);\n                actionPlan = actionPlan.WithCallToAction(cta);\n            }\n        }\n\n\n        let plan = actionPlan.Build();\n        log.Information(\"*** function buildActionPlan() finished\");\n        return plan;\n\n    }\n\n\n\n\n    function buildCallToAction(callToActionModel: ICallToAction): any | undefined {\n        log.Information(\"*********** function buildCallToAction() *****************\");\n        log.Information(\"************-Data-****************\");\n        log.Information(JSON.stringify(callToActionModel));\n        log.Information(\"****************************\");\n        let cta = actions.sharedo\n            .BuildCallToAction()\n            .WithDisplay(callToActionModel.title);\n        if (callToActionModel.styles) {\n            cta = cta.WithStyles(callToActionModel.styles);\n        }\n        cta = cta.Build();\n\n        cta.CallToActionContextType = callToActionModel.contextType\n\n\n        log.Information(\"ContextIdVariable: \" + callToActionModel.contextIdVariable);\n        if (callToActionModel.contextIdVariable) {\n            let contextId = ctx[callToActionModel.contextIdVariable];\n            if (contextId) {\n\n                log.Information(`typeof contextId: ${typeof contextId}`);\n                if (typeof contextId === 'string') {\n                    contextId = Guid.Parse(contextId);\n                }\n\n                log.Information(\"ContextId: \" + contextId);\n                cta.CallToActionContextId = contextId;\n                log.Information(\"cta.CallToActionContextId: \" + cta.CallToActionContextId);\n            }\n            else {\n                log.Warning(`ContextIdVariable: ${callToActionModel.contextIdVariable} was not found in the context`);\n            }\n        }\n\n\n        cta.CallToActionCommand = callToActionModel.command;\n\n        // ifNotNull.Configuration.commandConfig\n        if (callToActionModel.commandConfig) {\n            cta.CallToActionCommandConfiguration = callToActionModel.commandConfig;\n        }\n        // endif\n\n        // ifNull.Configuration.commandConfig\n        if (!callToActionModel.commandConfig) {\n            cta.CallToActionCommandConfiguration = \"{}\";\n        }\n        // endif\n\n        // ifNotNull.Configuration.icon\n        if (callToActionModel.icon) {\n            cta.CallToActionIcon = callToActionModel.icon;\n        }\n        // endif;    \n\n        // ifNotNull.Configuration.css\n        if (callToActionModel.css) {\n            cta.CallToActionCss = callToActionModel.css;\n        }\n        // endif;\n        log.Information('**** buildCallToAction finished');\n        return cta;\n    }\n\n    function getExistingActionPlanId(id:string)\n    {\n        let result : IShareDoGetResponse<IShareDoActionPlan> = sharedo.http.get(`/api/sharedo/${id}/actionplan`);\n        log.Information(\"result: \" + JSON.stringify(result));\n        if(result.success)\n        {\n            log.Information(\"result.body: \" + JSON.stringify(result.body));\n            if(result.body && result.body.id)\n            {\n                log.Information(\"result.body.id: \" + result.body.id);\n                return result.body.id;\n            }\n        }\n        \n        return undefined;\n\n    }\n\n\n})();"],"mappings":"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"}