{"version":3,"file":"LargeFiles-factory.js","names":["createModel","actionModel","actionOptions","wfModel","stepModel","self","defaults","config","connections","options","$","extend","dispose"],"sources":["../../../src/NodeBased/WorkflowActions/LargeFiles/LargeFiles-factory.ts"],"sourcesContent":["(function()\r\n{\r\n    var createModel = function(actionModel:any, actionOptions:any, wfModel:any, stepModel:any)\r\n    {\r\n        // Reference self as the action model we're extending\r\n        var self = actionModel;\r\n\r\n        // Setup model defaults and extend from loaded config\r\n        var defaults =\r\n        { \r\n            // Your custom config is passed in this object\r\n            config: { },\r\n\r\n            // The list of connections as persisted\r\n            connections: {}\r\n        };\r\n        var options = $.extend(true, {}, defaults, actionOptions);\r\n\r\n        // EXAMPLE: Extend the action model with custom model\r\n        // self.config.someProperty = ko.observable(options.config.someProperty);\r\n\r\n        // EXAMPLE: Extend the action model validation\r\n        // self.validation.someProperty = Validator.required(self, self.config.someProperty, \"Specify something\");\r\n        //\r\n        // self.actionModelErrorCount = ko.pureComputed(() =>\r\n        // {\r\n        //     var fails = 0;\r\n        //     if (self.validation.someProperty()) fails++;\r\n        //     return fails;\r\n        // });\r\n\r\n        // EXAMPLE: Store non config model properties in the action\r\n        // You normally only need to store things in the action model if you need them outside of the designer widget\r\n        // e.g. to validate the step without the designer widget being loaded\r\n        // self.ui.someThing = true;\r\n\r\n        // EXAMPLE: Reference and track variable selections\r\n        // Be aware that variable tracking creates a subscription, so any `trackVariable`'s must be disposed\r\n        // self.config.selectedVariable = ko.observable(options.config.selectedVariable);\r\n        // self.config.outputVariable = ko.observable(options.config.outputVariable);\r\n        // self.ui.selectedVariable = self.trackVariable(self.config.selectedVariable, \"/Identifier/Ods Entity Identifier\");\r\n        // self.ui.outputVariable = self.trackVariable(self.config.outputVariable);\r\n\r\n        // EXAMPLE: force addition of outlets to an action of this type\r\n        //          NOTE the outlet label can be observable to keep in sync in the diagram\r\n        // self.addAvailableOutlet(\"outlet-id\", \"Outlet label\");\r\n    };\r\n\r\n    var dispose = function(actionModel:any)\r\n    {\r\n        var self = actionModel;\r\n        // EXAMPLE: Dispose of the variable trackers\r\n        // self.ui.selectedVariable.dispose();\r\n        // self.ui.outputVariable.dispose();\r\n    };\r\n\r\n    return {\r\n        createModel: createModel,\r\n        dispose: dispose\r\n    };\r\n})();"],"mappings":"AAAA,CAAC,YACD;EACI,IAAIA,WAAW,GAAG,SAAAA,CAASC,WAAe,EAAEC,aAAiB,EAAEC,OAAW,EAAEC,SAAa,EACzF;IACI;IACA,IAAIC,IAAI,GAAGJ,WAAW;;IAEtB;IACA,IAAIK,QAAQ,GACZ;MACI;MACAC,MAAM,EAAE,CAAE,CAAC;MAEX;MACAC,WAAW,EAAE,CAAC;IAClB,CAAC;IACD,IAAIC,OAAO,GAAGC,CAAC,CAACC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAEL,QAAQ,EAAEJ,aAAa,CAAC;;IAEzD;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;EACJ,CAAC;;EAED,IAAIU,OAAO,GAAG,SAAAA,CAASX,WAAe,EACtC;IACI,IAAII,IAAI,GAAGJ,WAAW;IACtB;IACA;IACA;EACJ,CAAC;;EAED,OAAO;IACHD,WAAW,EAAEA,WAAW;IACxBY,OAAO,EAAEA;EACb,CAAC;AACL,CAAC,EAAE,CAAC"}