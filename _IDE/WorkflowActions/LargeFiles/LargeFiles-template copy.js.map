{"version":3,"file":"LargeFiles-template copy.js","names":["getEmailAttachments","retValue","Array","outboundEmailWorkTypeId","ctx","relatedDocumentsResult","sharedo","http","get","concat","log","Information","JSON","stringify","success","Error","body","relatedDocument","length","repositoryContext","parse","repositoryContextId","Id","repositoryDocumentsResult","repositoryDocuments","i","relatedDoc","repositoryDoc","items","find","x","id","documentId","emailAttachment","fileSize","size","push","emailAttachments"],"sources":["../../../src/NodeBased/WorkflowActions/LargeFiles/LargeFiles-template copy.ts"],"sourcesContent":["\r\ninterface IEmailAttachments {\r\n  relatedDocument: IRelatedDocument\r\n  fileSize: number\r\n\r\n}\r\n\r\n \r\nfunction getEmailAttachments(): Array<IEmailAttachments> {\r\n\r\n  let retValue = new Array<IEmailAttachments>();\r\n\r\n  let outboundEmailWorkTypeId = ctx[\"outboundEmailWorkTypeId\"];\r\n\r\n  outboundEmailWorkTypeId = \"0986b02d-8d16-4995-b514-b042006c2d0d\"; //for testing\r\n\r\n  var relatedDocumentsResult = sharedo.http.get(\"/api/sharedo/\".concat(outboundEmailWorkTypeId, \"/relatedDocuments\"));\r\n\r\n  log.Information(\"result: \" + JSON.stringify(relatedDocumentsResult));\r\n\r\n  if (!relatedDocumentsResult.success) {\r\n    log.Error(\"failed to get related documents\");\r\n    return retValue;\r\n  }\r\n\r\n\r\n\r\n  log.Information(\"result.body: \" + JSON.stringify(relatedDocumentsResult.body));\r\n\r\n  let relatedDocument: IRelatedDocument[] = relatedDocumentsResult.body;\r\n\r\n  if (relatedDocument.length === 0) {\r\n    log.Information(\"No related document found\");\r\n    return retValue;\r\n  }\r\n\r\n\r\n  //{\\\"Id\\\":\\\"5883f9cb-36b6-451e-ab73-b013004ea7b1\\\"}\r\n  //Extract the repository for the related documents from the first entry\r\n  let repositoryContext = JSON.parse(relatedDocument[0].repositoryContext);\r\n  let repositoryContextId = repositoryContext.Id;\r\n\r\n  //Get all the repository document list which includes the sizes \r\n  let repositoryDocumentsResult = sharedo.http.get(\"/api/repository/matter-documents/?Id=\" + repositoryContextId);\r\n\r\n  if (!repositoryDocumentsResult.success) {\r\n    log.Error(\"failed to get related documents repository documents\");\r\n    log.Information(\"result: \" + JSON.stringify(repositoryDocumentsResult));\r\n    return retValue;\r\n  }\r\n\r\n\r\n  let repositoryDocuments: IGetMatterDocumentsResponse = repositoryDocumentsResult.body;\r\n\r\n\r\n\r\n  //Loop through the related documents and find the matching repository document\r\n  for (let i = 0; i < relatedDocument.length; i++) {\r\n    let relatedDoc = relatedDocument[i];\r\n\r\n    //find the repository document\r\n    let repositoryDoc = repositoryDocuments.items.find(x => x.id === relatedDoc.documentId);\r\n\r\n    if (!repositoryDoc) { continue }\r\n\r\n    let emailAttachment: IEmailAttachments = {\r\n      relatedDocument: relatedDoc,\r\n      fileSize: repositoryDoc.size || 0\r\n    };\r\n\r\n    retValue.push(emailAttachment);\r\n  }\r\n\r\n  return retValue;\r\n}\r\n \r\n\r\n\r\nlet emailAttachments = getEmailAttachments();\r\n\r\nfor(let i = 0; i < emailAttachments.length; i++) {\r\n  let emailAttachment = emailAttachments[i];\r\n  log.Information(\"emailAttachment: \" + JSON.stringify(emailAttachment));\r\n}"],"mappings":"AAQA,SAASA,mBAAmBA,CAAA,EAA6B;EAEvD,IAAIC,QAAQ,GAAG,IAAIC,KAAK,CAAoB,CAAC;EAE7C,IAAIC,uBAAuB,GAAGC,GAAG,CAAC,yBAAyB,CAAC;EAE5DD,uBAAuB,GAAG,sCAAsC,CAAC,CAAC;;EAElE,IAAIE,sBAAsB,GAAGC,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,eAAe,CAACC,MAAM,CAACN,uBAAuB,EAAE,mBAAmB,CAAC,CAAC;EAEnHO,GAAG,CAACC,WAAW,CAAC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACR,sBAAsB,CAAC,CAAC;EAEpE,IAAI,CAACA,sBAAsB,CAACS,OAAO,EAAE;IACnCJ,GAAG,CAACK,KAAK,CAAC,iCAAiC,CAAC;IAC5C,OAAOd,QAAQ;EACjB;EAIAS,GAAG,CAACC,WAAW,CAAC,eAAe,GAAGC,IAAI,CAACC,SAAS,CAACR,sBAAsB,CAACW,IAAI,CAAC,CAAC;EAE9E,IAAIC,eAAmC,GAAGZ,sBAAsB,CAACW,IAAI;EAErE,IAAIC,eAAe,CAACC,MAAM,KAAK,CAAC,EAAE;IAChCR,GAAG,CAACC,WAAW,CAAC,2BAA2B,CAAC;IAC5C,OAAOV,QAAQ;EACjB;;EAGA;EACA;EACA,IAAIkB,iBAAiB,GAAGP,IAAI,CAACQ,KAAK,CAACH,eAAe,CAAC,CAAC,CAAC,CAACE,iBAAiB,CAAC;EACxE,IAAIE,mBAAmB,GAAGF,iBAAiB,CAACG,EAAE;;EAE9C;EACA,IAAIC,yBAAyB,GAAGjB,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,uCAAuC,GAAGa,mBAAmB,CAAC;EAE/G,IAAI,CAACE,yBAAyB,CAACT,OAAO,EAAE;IACtCJ,GAAG,CAACK,KAAK,CAAC,sDAAsD,CAAC;IACjEL,GAAG,CAACC,WAAW,CAAC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACU,yBAAyB,CAAC,CAAC;IACvE,OAAOtB,QAAQ;EACjB;EAGA,IAAIuB,mBAAgD,GAAGD,yBAAyB,CAACP,IAAI;;EAIrF;EACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,eAAe,CAACC,MAAM,EAAEO,CAAC,EAAE,EAAE;IAC/C,IAAIC,UAAU,GAAGT,eAAe,CAACQ,CAAC,CAAC;;IAEnC;IACA,IAAIE,aAAa,GAAGH,mBAAmB,CAACI,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,UAAU,CAACM,UAAU,CAAC;IAEvF,IAAI,CAACL,aAAa,EAAE;MAAE;IAAS;IAE/B,IAAIM,eAAkC,GAAG;MACvChB,eAAe,EAAES,UAAU;MAC3BQ,QAAQ,EAAEP,aAAa,CAACQ,IAAI,IAAI;IAClC,CAAC;IAEDlC,QAAQ,CAACmC,IAAI,CAACH,eAAe,CAAC;EAChC;EAEA,OAAOhC,QAAQ;AACjB;AAIA,IAAIoC,gBAAgB,GAAGrC,mBAAmB,CAAC,CAAC;AAE5C,KAAI,IAAIyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,gBAAgB,CAACnB,MAAM,EAAEO,CAAC,EAAE,EAAE;EAC/C,IAAIQ,eAAe,GAAGI,gBAAgB,CAACZ,CAAC,CAAC;EACzCf,GAAG,CAACC,WAAW,CAAC,mBAAmB,GAAGC,IAAI,CAACC,SAAS,CAACoB,eAAe,CAAC,CAAC;AACxE"}