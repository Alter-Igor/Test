{"version":3,"file":"updateExistingTaskActionPlan-factory.js","names":["createModel","actionModel","actionOptions","wfModel","stepModel","self","defaults","config","taskId","actionPlanTitle","actionPlanItemsList","connections","options","$","extend","ko","observable","validation","Validator","required","pureComputed","actionModelErrorCount","fails","ui","trackVariable","mustBeCollection","mustNotBeCollection","dispose"],"sources":["../../../src/NodeBased/WorkflowActions/UpdateExistingTaskActionPlan/updateExistingTaskActionPlan-factory.ts"],"sourcesContent":["ï»¿(function()\n{\n    var createModel = function(actionModel: any, actionOptions: any, wfModel: any, stepModel: any)\n    {\n        // Reference self as the action model we're extending\n        var self = actionModel;\n\n        // Setup model defaults and extend from loaded config\n        var defaults =\n        {\n            // Your custom config is passed in this object\n            config:\n            {\n                taskId: null,            \n                actionPlanTitle: \"\",        // Title for the action plan,\n                actionPlanItemsList: null,  // The variable holding an array of action plan items to associate with the task\n                //outputVariable: null,       // The variable to output the new task id to\n                       \n            },\n\n            // The list of connections as persisted\n            connections: {}\n        };\n        var options = $.extend(true, {}, defaults, actionOptions);\n\n        // Add this action's specific config to the model\n        self.config.taskId = ko.observable(options.config.taskId);        \n        self.config.actionPlanItemsList = ko.observable(options.config.actionPlanItemsList);\n          self.config.actionPlanTitle = ko.observable(options.config.actionPlanTitle);\n        //self.config.outputVariable = ko.observable(options.config.outputVariable);\n\n        self.validation.taskId = Validator.required(self, self.config.taskId, \"You must specify a variable holding the task id\");\n\n        // Extend with this action's specific validation\n        self.validation.actionPlanTitle = ko.pureComputed(() =>\n        {\n            var actionPlanTitle = self.config.actionPlanTitle();\n            if (!actionPlanTitle) return \"Action plan title must be provided\";\n            return null;\n        });\n\n       // Extend the action model with our custom model validation\n       self.actionModelErrorCount = ko.pureComputed(function()\n       {\n           var fails = 0;\n           if (self.validation.taskId()) fails++;          \n           if (self.validation.actionPlanTitle()) fails++;\n           return fails;\n       });\n\n       \n        \n        // Create the variable validator/selector - this is dynamic based on context type\n        self.ui.taskId = self.trackVariable(self.config.taskId, \"/Identifier\");\n        //self.ui.outputVariable = self.trackVariable(self.config.outputVariable, \"/Identifier/Work Type Identifier/Task Identifier\");\n        self.ui.actionPlanItemsList = self.trackVariable(self.config.actionPlanItemsList, \"/Entity/Action Plan Item\",\n            {\n                mustBeCollection: true,\n                mustNotBeCollection: false\n            });\n    };\n\n    var dispose = function(actionModel: any)\n    {\n        var self = actionModel;\n        self.ui.taskId.dispose();\n        //self.ui.outputVariable.dispose();\n        self.ui.actionPlanItemsList.dispose();\n    };\n\n    return {\n        createModel: createModel,\n        dispose: dispose\n    };\n})();"],"mappings":"AAAC,CAAC,YACF;EACI,IAAIA,WAAW,GAAG,SAAdA,WAAWA,CAAYC,WAAgB,EAAEC,aAAkB,EAAEC,OAAY,EAAEC,SAAc,EAC7F;IACI;IACA,IAAIC,IAAI,GAAGJ,WAAW;;IAEtB;IACA,IAAIK,QAAQ,GACZ;MACI;MACAC,MAAM,EACN;QACIC,MAAM,EAAE,IAAI;QACZC,eAAe,EAAE,EAAE;QAAS;QAC5BC,mBAAmB,EAAE,IAAI,CAAG;QAC5B;MAEJ,CAAC;;MAED;MACAC,WAAW,EAAE,CAAC;IAClB,CAAC;IACD,IAAIC,OAAO,GAAGC,CAAC,CAACC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAER,QAAQ,EAAEJ,aAAa,CAAC;;IAEzD;IACAG,IAAI,CAACE,MAAM,CAACC,MAAM,GAAGO,EAAE,CAACC,UAAU,CAACJ,OAAO,CAACL,MAAM,CAACC,MAAM,CAAC;IACzDH,IAAI,CAACE,MAAM,CAACG,mBAAmB,GAAGK,EAAE,CAACC,UAAU,CAACJ,OAAO,CAACL,MAAM,CAACG,mBAAmB,CAAC;IACjFL,IAAI,CAACE,MAAM,CAACE,eAAe,GAAGM,EAAE,CAACC,UAAU,CAACJ,OAAO,CAACL,MAAM,CAACE,eAAe,CAAC;IAC7E;;IAEAJ,IAAI,CAACY,UAAU,CAACT,MAAM,GAAGU,SAAS,CAACC,QAAQ,CAACd,IAAI,EAAEA,IAAI,CAACE,MAAM,CAACC,MAAM,EAAE,iDAAiD,CAAC;;IAExH;IACAH,IAAI,CAACY,UAAU,CAACR,eAAe,GAAGM,EAAE,CAACK,YAAY,CAAC,MAClD;MACI,IAAIX,eAAe,GAAGJ,IAAI,CAACE,MAAM,CAACE,eAAe,CAAC,CAAC;MACnD,IAAI,CAACA,eAAe,EAAE,OAAO,oCAAoC;MACjE,OAAO,IAAI;IACf,CAAC,CAAC;;IAEH;IACAJ,IAAI,CAACgB,qBAAqB,GAAGN,EAAE,CAACK,YAAY,CAAC,YAC7C;MACI,IAAIE,KAAK,GAAG,CAAC;MACb,IAAIjB,IAAI,CAACY,UAAU,CAACT,MAAM,CAAC,CAAC,EAAEc,KAAK,EAAE;MACrC,IAAIjB,IAAI,CAACY,UAAU,CAACR,eAAe,CAAC,CAAC,EAAEa,KAAK,EAAE;MAC9C,OAAOA,KAAK;IAChB,CAAC,CAAC;;IAID;IACAjB,IAAI,CAACkB,EAAE,CAACf,MAAM,GAAGH,IAAI,CAACmB,aAAa,CAACnB,IAAI,CAACE,MAAM,CAACC,MAAM,EAAE,aAAa,CAAC;IACtE;IACAH,IAAI,CAACkB,EAAE,CAACb,mBAAmB,GAAGL,IAAI,CAACmB,aAAa,CAACnB,IAAI,CAACE,MAAM,CAACG,mBAAmB,EAAE,0BAA0B,EACxG;MACIe,gBAAgB,EAAE,IAAI;MACtBC,mBAAmB,EAAE;IACzB,CAAC,CAAC;EACV,CAAC;EAED,IAAIC,OAAO,GAAG,SAAVA,OAAOA,CAAY1B,WAAgB,EACvC;IACI,IAAII,IAAI,GAAGJ,WAAW;IACtBI,IAAI,CAACkB,EAAE,CAACf,MAAM,CAACmB,OAAO,CAAC,CAAC;IACxB;IACAtB,IAAI,CAACkB,EAAE,CAACb,mBAAmB,CAACiB,OAAO,CAAC,CAAC;EACzC,CAAC;EAED,OAAO;IACH3B,WAAW,EAAEA,WAAW;IACxB2B,OAAO,EAAEA;EACb,CAAC;AACL,CAAC,EAAE,CAAC"}