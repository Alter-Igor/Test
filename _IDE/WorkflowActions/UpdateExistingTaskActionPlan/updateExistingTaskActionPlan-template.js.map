{"version":3,"file":"updateExistingTaskActionPlan-template.js","names":["taskId","ctx","Error","existingAp","actionPlanBuilder","actions","sharedo","BuildActionPlan","ForSharedo","actionPlan","task","ActionPlan","apId","Id","Guid","Empty","log","Information","ForExistingActionPlan","WithActionPlan","WithTitle","buildString","itemsAsString","JSON","stringify","items","slice","sort","a","b","Number","parseInt","order","forEach","i","description","type","actionPlanItem","buildActionPlan","AddItem","Build","Save","actionPlanModel","BuildActionPlanItem","WithDescription","AddCheckbox","AddInformation","AddHeader","mandatory","MarkRequired","WithOrder","callToActionVar","callToAction","Warning","cta","buildCallToAction","WithCallToAction","plan","callToActionModel","BuildCallToAction","WithDisplay","title","styles","WithStyles","CallToActionContextType","contextType","contextIdVariable","contextId","concat","Parse","CallToActionContextId","CallToActionCommand","command","commandConfig","CallToActionCommandConfiguration","icon","CallToActionIcon","css","CallToActionCss"],"sources":["../../../src/WorkflowActions/UpdateExistingTaskActionPlan/updateExistingTaskActionPlan-template.ts"],"sourcesContent":["ï»¿(() => {\n    let taskId = ctx[\"newTaskId\"];\n    if (!taskId) {\n        throw new Error(\"Task id was not provided\");\n    }\n\n    let existingAp = false;\n    let actionPlanBuilder = actions.sharedo.BuildActionPlan().ForSharedo(taskId);\n    let actionPlan = task.ActionPlan;\n    let apId;\n    if (actionPlan && actionPlan.Id && actionPlan.Id == Guid.Empty) { //must only be == not ===     \n        log.Information(\"Existing action plan found\");\n        actionPlanBuilder = actionPlanBuilder.ForExistingActionPlan(actionPlan.Id);\n        existingAp = true;\n    }\n\n    if (!existingAp) {\n        log.Information(\"No existing action plan found\");\n\n        actionPlan = task.WithActionPlan()\n            .WithTitle(sharedo.buildString(\"$model.Configuration.actionPlanTitle;\"));\n    }\n\n    // let obj = actionPlan;\n    // for (let key in obj) {\n    //     if (typeof obj[key] === 'function') {\n    //         log.Information(\"function \" + key);\n    //     }\n    //     else {\n    //         log.Information(key + \" : \" + obj[key]);\n    //         log.Information(JSON.stringify(obj[key]));\n    //     }\n    // }\n\n    // Add action plan items\n    // $ifNotNull.Configuration.actionPlanItemsList\n    {\n        let itemsAsString = ctx[\"$model.Configuration.actionPlanItemsList\"] as IActionPlan[];\n\n        log.Information('*** itemsAsString:');\n        log.Information(JSON.stringify(itemsAsString));\n\n        if (itemsAsString) {\n            let items = itemsAsString;//JSON.parse(itemsAsString) as Array<any>;\n            items.slice()\n                .sort((a, b) => Number.parseInt(a.order, 10) - Number.parseInt(b.order, 10))\n                .forEach(function (i) {\n                    log.Information('*** i:');\n                    log.Information('description: ' + i.description);\n                    log.Information('type: ' + i.type);\n                    log.Information('order: ' + i.order);\n                    log.Information('**********');\n                    let actionPlanItem = buildActionPlan(i);\n                    log.Information('*** actionPlanItem:');\n                    log.Information(JSON.stringify(actionPlanItem));\n\n                    actionPlan = actionPlan.AddItem(actionPlanItem);\n                });\n        }\n    }\n    // $endif\n\n    log.Information('*** actionPlanBuilder:');\n    log.Information(JSON.stringify(actionPlan));\n\n    task = actionPlan.Build();\n\n    // $endif\n\n\n\n    //loop though object and show all method and properties\n\n\n    log.Information(\"----- save -------\");\n\n    task.Save();\n    // ()=>{\n\n    // let taskId = ctx[\"$model.Configuration.taskId\"];\n    // if(!taskId) {\n    //     throw new Error(\"Task id was not provided\");\n    // }\n\n \n    // {\n    //     // Add action plan\n    //     let actionPlanBuilder = task\n    //         .WithActionPlan()\n    //         .WithTitle(sharedo.buildString(\"$model.Configuration.actionPlanTitle;\"));\n\n\n    // task.Save();\n\n    // log.Information('*** task:');\n    // log.Information(JSON.stringify(task));\n\n\n\n\n    function buildActionPlan(actionPlanModel: IActionPlan): any {\n        log.Information(\"*** function buildActionPlan()\");\n        let actionPlan = actions.sharedo.BuildActionPlanItem();\n\n        actionPlan = actionPlan.WithDescription(actionPlanModel.description);\n\n        let type = actionPlanModel.type;\n\n        if (type === \"checkbox\") {\n            actionPlan = actionPlan.AddCheckbox();\n        }\n\n        if (type === \"infobox\") {\n            actionPlan = actionPlan.AddInformation();\n        }\n\n        if (type === \"header\") {\n            actionPlan = actionPlan.AddHeader();\n        }\n\n        if (actionPlanModel.mandatory) {\n            actionPlan = actionPlan.MarkRequired();\n        }\n\n        let order = actionPlanModel.order;\n        actionPlan = actionPlan.WithOrder(order);\n\n\n        if (actionPlanModel.callToActionVar) {\n            let callToAction = actionPlanModel.callToActionVar;\n            if (!callToAction) {\n                log.Warning(\"Create action plan - a call to action variable ($model.Configuration.callToActionVar) was specified but was empty\");\n            }\n            else {\n                let cta = buildCallToAction(callToAction);\n                actionPlan = actionPlan.WithCallToAction(cta);\n            }\n        }\n\n\n        let plan = actionPlan.Build();\n        log.Information(\"*** function buildActionPlan() finished\");\n        return plan;\n\n    }\n\n\n\n\n    function buildCallToAction(callToActionModel: ICallToAction): any | undefined {\n        log.Information(\"*********** function buildCallToAction() *****************\");\n        log.Information(\"************-Data-****************\");\n        log.Information(JSON.stringify(callToActionModel));\n        log.Information(\"****************************\");\n        let cta = actions.sharedo\n            .BuildCallToAction()\n            .WithDisplay(callToActionModel.title);\n        if (callToActionModel.styles) {\n            cta = cta.WithStyles(callToActionModel.styles);\n        }\n        cta = cta.Build();\n\n        cta.CallToActionContextType = callToActionModel.contextType\n\n\n        log.Information(\"ContextIdVariable: \" + callToActionModel.contextIdVariable);\n        if (callToActionModel.contextIdVariable) {\n            let contextId = ctx[callToActionModel.contextIdVariable];\n            if (contextId) {\n\n                log.Information(`typeof contextId: ${typeof contextId}`);\n                if (typeof contextId === 'string') {\n                    contextId = Guid.Parse(contextId);\n                }\n\n                log.Information(\"ContextId: \" + contextId);\n                cta.CallToActionContextId = contextId;\n                log.Information(\"cta.CallToActionContextId: \" + cta.CallToActionContextId);\n            }\n            else {\n                log.Warning(`ContextIdVariable: ${callToActionModel.contextIdVariable} was not found in the context`);\n            }\n        }\n\n\n        cta.CallToActionCommand = callToActionModel.command;\n\n        // ifNotNull.Configuration.commandConfig\n        if (callToActionModel.commandConfig) {\n            cta.CallToActionCommandConfiguration = callToActionModel.commandConfig;\n        }\n        // endif\n\n        // ifNull.Configuration.commandConfig\n        if (!callToActionModel.commandConfig) {\n            cta.CallToActionCommandConfiguration = \"{}\";\n        }\n        // endif\n\n        // ifNotNull.Configuration.icon\n        if (callToActionModel.icon) {\n            cta.CallToActionIcon = callToActionModel.icon;\n        }\n        // endif;    \n\n        // ifNotNull.Configuration.css\n        if (callToActionModel.css) {\n            cta.CallToActionCss = callToActionModel.css;\n        }\n        // endif;\n        log.Information('**** buildCallToAction finished');\n        return cta;\n    }\n\n\n})();"],"mappings":"AAAC,CAAC,MAAM;EACJ,IAAIA,MAAM,GAAGC,GAAG,CAAC,WAAW,CAAC;EAC7B,IAAI,CAACD,MAAM,EAAE;IACT,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EAEA,IAAIC,UAAU,GAAG,KAAK;EACtB,IAAIC,iBAAiB,GAAGC,OAAO,CAACC,OAAO,CAACC,eAAe,CAAC,CAAC,CAACC,UAAU,CAACR,MAAM,CAAC;EAC5E,IAAIS,UAAU,GAAGC,IAAI,CAACC,UAAU;EAChC,IAAIC,IAAI;EACR,IAAIH,UAAU,IAAIA,UAAU,CAACI,EAAE,IAAIJ,UAAU,CAACI,EAAE,IAAIC,IAAI,CAACC,KAAK,EAAE;IAAE;IAC9DC,GAAG,CAACC,WAAW,CAAC,4BAA4B,CAAC;IAC7Cb,iBAAiB,GAAGA,iBAAiB,CAACc,qBAAqB,CAACT,UAAU,CAACI,EAAE,CAAC;IAC1EV,UAAU,GAAG,IAAI;EACrB;EAEA,IAAI,CAACA,UAAU,EAAE;IACba,GAAG,CAACC,WAAW,CAAC,+BAA+B,CAAC;IAEhDR,UAAU,GAAGC,IAAI,CAACS,cAAc,CAAC,CAAC,CAC7BC,SAAS,CAACd,OAAO,CAACe,WAAW,CAAC,uCAAuC,CAAC,CAAC;EAChF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;IACI,IAAIC,aAAa,GAAGrB,GAAG,CAAC,0CAA0C,CAAkB;IAEpFe,GAAG,CAACC,WAAW,CAAC,oBAAoB,CAAC;IACrCD,GAAG,CAACC,WAAW,CAACM,IAAI,CAACC,SAAS,CAACF,aAAa,CAAC,CAAC;IAE9C,IAAIA,aAAa,EAAE;MACf,IAAIG,KAAK,GAAGH,aAAa,CAAC;MAC1BG,KAAK,CAACC,KAAK,CAAC,CAAC,CACRC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACC,QAAQ,CAACH,CAAC,CAACI,KAAK,EAAE,EAAE,CAAC,GAAGF,MAAM,CAACC,QAAQ,CAACF,CAAC,CAACG,KAAK,EAAE,EAAE,CAAC,CAAC,CAC3EC,OAAO,CAAC,UAAUC,CAAC,EAAE;QAClBlB,GAAG,CAACC,WAAW,CAAC,QAAQ,CAAC;QACzBD,GAAG,CAACC,WAAW,CAAC,eAAe,GAAGiB,CAAC,CAACC,WAAW,CAAC;QAChDnB,GAAG,CAACC,WAAW,CAAC,QAAQ,GAAGiB,CAAC,CAACE,IAAI,CAAC;QAClCpB,GAAG,CAACC,WAAW,CAAC,SAAS,GAAGiB,CAAC,CAACF,KAAK,CAAC;QACpChB,GAAG,CAACC,WAAW,CAAC,YAAY,CAAC;QAC7B,IAAIoB,cAAc,GAAGC,eAAe,CAACJ,CAAC,CAAC;QACvClB,GAAG,CAACC,WAAW,CAAC,qBAAqB,CAAC;QACtCD,GAAG,CAACC,WAAW,CAACM,IAAI,CAACC,SAAS,CAACa,cAAc,CAAC,CAAC;QAE/C5B,UAAU,GAAGA,UAAU,CAAC8B,OAAO,CAACF,cAAc,CAAC;MACnD,CAAC,CAAC;IACV;EACJ;EACA;;EAEArB,GAAG,CAACC,WAAW,CAAC,wBAAwB,CAAC;EACzCD,GAAG,CAACC,WAAW,CAACM,IAAI,CAACC,SAAS,CAACf,UAAU,CAAC,CAAC;EAE3CC,IAAI,GAAGD,UAAU,CAAC+B,KAAK,CAAC,CAAC;;EAEzB;;EAIA;;EAGAxB,GAAG,CAACC,WAAW,CAAC,oBAAoB,CAAC;EAErCP,IAAI,CAAC+B,IAAI,CAAC,CAAC;EACX;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;;EAKA,SAASH,eAAeA,CAACI,eAA4B,EAAO;IACxD1B,GAAG,CAACC,WAAW,CAAC,gCAAgC,CAAC;IACjD,IAAIR,UAAU,GAAGJ,OAAO,CAACC,OAAO,CAACqC,mBAAmB,CAAC,CAAC;IAEtDlC,UAAU,GAAGA,UAAU,CAACmC,eAAe,CAACF,eAAe,CAACP,WAAW,CAAC;IAEpE,IAAIC,IAAI,GAAGM,eAAe,CAACN,IAAI;IAE/B,IAAIA,IAAI,KAAK,UAAU,EAAE;MACrB3B,UAAU,GAAGA,UAAU,CAACoC,WAAW,CAAC,CAAC;IACzC;IAEA,IAAIT,IAAI,KAAK,SAAS,EAAE;MACpB3B,UAAU,GAAGA,UAAU,CAACqC,cAAc,CAAC,CAAC;IAC5C;IAEA,IAAIV,IAAI,KAAK,QAAQ,EAAE;MACnB3B,UAAU,GAAGA,UAAU,CAACsC,SAAS,CAAC,CAAC;IACvC;IAEA,IAAIL,eAAe,CAACM,SAAS,EAAE;MAC3BvC,UAAU,GAAGA,UAAU,CAACwC,YAAY,CAAC,CAAC;IAC1C;IAEA,IAAIjB,KAAK,GAAGU,eAAe,CAACV,KAAK;IACjCvB,UAAU,GAAGA,UAAU,CAACyC,SAAS,CAAClB,KAAK,CAAC;IAGxC,IAAIU,eAAe,CAACS,eAAe,EAAE;MACjC,IAAIC,YAAY,GAAGV,eAAe,CAACS,eAAe;MAClD,IAAI,CAACC,YAAY,EAAE;QACfpC,GAAG,CAACqC,OAAO,CAAC,mHAAmH,CAAC;MACpI,CAAC,MACI;QACD,IAAIC,GAAG,GAAGC,iBAAiB,CAACH,YAAY,CAAC;QACzC3C,UAAU,GAAGA,UAAU,CAAC+C,gBAAgB,CAACF,GAAG,CAAC;MACjD;IACJ;IAGA,IAAIG,IAAI,GAAGhD,UAAU,CAAC+B,KAAK,CAAC,CAAC;IAC7BxB,GAAG,CAACC,WAAW,CAAC,yCAAyC,CAAC;IAC1D,OAAOwC,IAAI;EAEf;EAKA,SAASF,iBAAiBA,CAACG,iBAAgC,EAAmB;IAC1E1C,GAAG,CAACC,WAAW,CAAC,4DAA4D,CAAC;IAC7ED,GAAG,CAACC,WAAW,CAAC,oCAAoC,CAAC;IACrDD,GAAG,CAACC,WAAW,CAACM,IAAI,CAACC,SAAS,CAACkC,iBAAiB,CAAC,CAAC;IAClD1C,GAAG,CAACC,WAAW,CAAC,8BAA8B,CAAC;IAC/C,IAAIqC,GAAG,GAAGjD,OAAO,CAACC,OAAO,CACpBqD,iBAAiB,CAAC,CAAC,CACnBC,WAAW,CAACF,iBAAiB,CAACG,KAAK,CAAC;IACzC,IAAIH,iBAAiB,CAACI,MAAM,EAAE;MAC1BR,GAAG,GAAGA,GAAG,CAACS,UAAU,CAACL,iBAAiB,CAACI,MAAM,CAAC;IAClD;IACAR,GAAG,GAAGA,GAAG,CAACd,KAAK,CAAC,CAAC;IAEjBc,GAAG,CAACU,uBAAuB,GAAGN,iBAAiB,CAACO,WAAW;IAG3DjD,GAAG,CAACC,WAAW,CAAC,qBAAqB,GAAGyC,iBAAiB,CAACQ,iBAAiB,CAAC;IAC5E,IAAIR,iBAAiB,CAACQ,iBAAiB,EAAE;MACrC,IAAIC,SAAS,GAAGlE,GAAG,CAACyD,iBAAiB,CAACQ,iBAAiB,CAAC;MACxD,IAAIC,SAAS,EAAE;QAEXnD,GAAG,CAACC,WAAW,sBAAAmD,MAAA,CAAsB,OAAOD,SAAS,CAAE,CAAC;QACxD,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;UAC/BA,SAAS,GAAGrD,IAAI,CAACuD,KAAK,CAACF,SAAS,CAAC;QACrC;QAEAnD,GAAG,CAACC,WAAW,CAAC,aAAa,GAAGkD,SAAS,CAAC;QAC1Cb,GAAG,CAACgB,qBAAqB,GAAGH,SAAS;QACrCnD,GAAG,CAACC,WAAW,CAAC,6BAA6B,GAAGqC,GAAG,CAACgB,qBAAqB,CAAC;MAC9E,CAAC,MACI;QACDtD,GAAG,CAACqC,OAAO,uBAAAe,MAAA,CAAuBV,iBAAiB,CAACQ,iBAAiB,kCAA+B,CAAC;MACzG;IACJ;IAGAZ,GAAG,CAACiB,mBAAmB,GAAGb,iBAAiB,CAACc,OAAO;;IAEnD;IACA,IAAId,iBAAiB,CAACe,aAAa,EAAE;MACjCnB,GAAG,CAACoB,gCAAgC,GAAGhB,iBAAiB,CAACe,aAAa;IAC1E;IACA;;IAEA;IACA,IAAI,CAACf,iBAAiB,CAACe,aAAa,EAAE;MAClCnB,GAAG,CAACoB,gCAAgC,GAAG,IAAI;IAC/C;IACA;;IAEA;IACA,IAAIhB,iBAAiB,CAACiB,IAAI,EAAE;MACxBrB,GAAG,CAACsB,gBAAgB,GAAGlB,iBAAiB,CAACiB,IAAI;IACjD;IACA;;IAEA;IACA,IAAIjB,iBAAiB,CAACmB,GAAG,EAAE;MACvBvB,GAAG,CAACwB,eAAe,GAAGpB,iBAAiB,CAACmB,GAAG;IAC/C;IACA;IACA7D,GAAG,CAACC,WAAW,CAAC,iCAAiC,CAAC;IAClD,OAAOqC,GAAG;EACd;AAGJ,CAAC,EAAE,CAAC"}