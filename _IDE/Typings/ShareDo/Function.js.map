{"version":3,"file":"Function.js","names":["wordsType","defendant","youngest","reduce","prev","current","age"],"sources":["../../../src/Typings/ShareDo/Function.ts"],"sourcesContent":["\n\nexport enum wordsType {\n    upper,\n    lower,\n    title,\n};\n\ndeclare function NumberToWordsWithCase(number: number, type: wordsType): string;\n\n\nexport interface DataModel {\n    fistName: string;\n    lastName: string;\n    age: number;\n    dateOfBirth: Date;\n    address: string;\n    city: string;\n    state: string;\n}\n\nlet defendant : Array<DataModel> = [];\n\n\n//look thought all defendant and find the youngest\nlet youngest = defendant.reduce((prev, current) => (prev.age < current.age) ? prev : current);\n\n\n//look thought all defendant and build a string will all name and age in words separated by comma with last using an and\n\n\n\n\n"],"mappings":"AAEA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAIpB;AAeD,IAAIC,SAA4B,GAAG,EAAE;;AAGrC;AACA,IAAIC,QAAQ,GAAGD,SAAS,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAMD,IAAI,CAACE,GAAG,GAAGD,OAAO,CAACC,GAAG,GAAIF,IAAI,GAAGC,OAAO,CAAC;;AAG7F"}