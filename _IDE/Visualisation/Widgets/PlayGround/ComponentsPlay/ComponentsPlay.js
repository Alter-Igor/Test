(()=>{var e={d:(t,o)=>{for(var s in o)e.o(o,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:o[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};(()=>{"use strict";e.r(t),e.d(t,{ComponentsPlay:()=>s});const o=ko;function s(e,t,o){return new i(e,t,o)}class i{constructor(e,t,o){this.log("constructor",t);const s=$.extend(!0,{},{id:null,todoMessage:null},t);this.setModelDefaults(s),this.model={todoMessage:s.todoMessage,sharedoId:s.id,sharedoTypeSystemName:s.sharedoTypeSystemName},this.setupOdsPickerConfig(),this.setupAutoComplete()}setupAutoComplete(){this.autoComplete=new Sharedo.UI.Framework.Components.AutoCompleteHandler({enabled:!0,mode:"select",text:{placeholder:"Search for matter",empty:"Start typing to lookup a matter by number",emptyIcon:"fa-search",typing:"Will search when you stop typing",searching:"One moment...",noResults:"Nothing found"},select:{allowClear:!0,selectedValue:this.selectedMatter,onLoad:this.autoCompleteLoadMatter.bind(this)},onFind:this.autoCompleteFinder.bind(this),templates:{result:"__matter_search_item_template"}})}autoCompleteFinder(e){this.log("autoCompleteFinder",e),e.toLowerCase();let t=[];for(let e=0;e<100;e++)t.push(new Sharedo.UI.Framework.Components.AutoCompleteFindCard({type:"result",id:e,icon:"fa-users",text:"Team "+e}));return t.length>0&&(t=_.sortBy(t,"text"),t.splice(0,0,new Sharedo.UI.Framework.Components.AutoCompleteFindCard({type:"message",icon:"fa-check text-success",text:"Found "+t.length+" teams"}))),t}autoCompleteLoadMatter(){this.log("loadMatter",this)}setModelDefaults(e){!e.id&&$ui&&$ui.pageContext&&$ui.pageContext.sharedoId&&(e.id=$ui.pageContext.sharedoId),!e.sharedoTypeSystemName&&$ui&&$ui.pageContext&&$ui.pageContext.sharedoTypeSystemName&&(e.sharedoTypeSystemName=$ui.pageContext.sharedoTypeSystemName),this.odsEntityPickerConfig=null}onDestroy(){this.log("onDestroy",this)}log(e,t){console.log("%c ComponentsPlay: "+e,"color: #ff0000",t)}loadAndBind(){this.log("loadAndBind",this)}setupOdsPickerConfig(){this.log("setupOdsPickerConfig",this),this.odsEntityPickerConfig={odsEntityValues:o.observableArray(),validationErrorCount:o.observableArray(),odsEntityValidationErrorCount:o.observable(0),configuration:{sharedoId:this.model.sharedoId,sharedoTypeSystemName:this.model.sharedoTypeSystemName,showPreSharedo:!0,showPostSharedo:!0,roleConfigModels:o.observableArray([{displayName:"Client",roleSystemName:"client",showSearchOds:!0,required:!0,icon:"",disabled:!1,odsId:null}])}},window.testComp=this.odsEntityPickerConfig,this.log("setupOdsPickerConfig",this.odsEntityPickerConfig),this.log("setupOdsPickerConfig",this.odsEntityPickerConfig.configuration.roleConfigModels()),this.odsPicker=this.odsEntityPickerConfig,this.countdownAndSetOdsPickerDefaultExample()}countdownAndSetOdsPickerDefaultExample(){let e=1e3;this.odsCountdown=o.observable(100);let t=()=>{var o,s;if(e-=50,e<5&&(e=30),console.log("interval",e),this.odsCountdown)if(this.odsCountdown(this.odsCountdown()-1),this.odsCountdown()<=0){if(this.odsEntityPickerConfig.odsEntityValues()[0].odsId())return;this.odsEntityPickerConfig.configuration.roleConfigModels()[0].odsId=$ui.pageContext.user.userid();let e=null===(s=null===(o=this.odsEntityPickerConfig.odsEntityValues()[0])||void 0===o?void 0:o.component)||void 0===s?void 0:s.updateComponentFromConfig;console.log("updateMethod",e),e&&e.bind(this.odsEntityPickerConfig.odsEntityValues()[0].component)()}else setTimeout(t,e)};setTimeout(t,e)}}})();var o=PlayGround="undefined"==typeof PlayGround?{}:PlayGround;for(var s in t)o[s]=t[s];t.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,