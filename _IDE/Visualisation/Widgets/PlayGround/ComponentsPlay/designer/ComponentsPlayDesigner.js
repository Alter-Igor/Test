(()=>{var e={d:(o,t)=>{for(var r in t)e.o(t,r)&&!e.o(o,r)&&Object.defineProperty(o,r,{enumerable:!0,get:t[r]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};(()=>{"use strict";e.r(o),e.d(o,{ComponentsPlayDesigner:()=>r,ComponentsPlayDesignerClass:()=>s});const t=ko;function r(e,o,t){return new s(e,o,t)}class s{constructor(e,o,r){const s=$.extend(!0,{},{todoMessage:""},o);this.model={todoMessage:t.observable(s.todoMessage)},this.validation={todoMessage:t.pureComputed((()=>{var e;return(null===(e=this.model)||void 0===e?void 0:e.todoMessage())?null:"The message is required"}))},this.validationErrorCount=t.pureComputed((()=>{let e=0;return this.validation.todoMessage()&&e++,e}))}onDestroy(){}loadAndBind(){}getModel(){return{todoMessage:this.model.todoMessage()}}}})();var t=PlayGround="undefined"==typeof PlayGround?{}:PlayGround;for(var r in o)t[r]=o[r];o.__esModule&&Object.defineProperty(t,"__esModule",{value:!0})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzaWduZXIvQ29tcG9uZW50c1BsYXlEZXNpZ25lci5qcyIsIm1hcHBpbmdzIjoiTUFDQSxJQUFJQSxFQUFzQixDQ0ExQkEsRUFBd0IsQ0FBQ0MsRUFBU0MsS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYRixFQUFvQkksRUFBRUYsRUFBWUMsS0FBU0gsRUFBb0JJLEVBQUVILEVBQVNFLElBQzVFRSxPQUFPQyxlQUFlTCxFQUFTRSxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsSUFFMUUsRUNOREgsRUFBd0IsQ0FBQ1MsRUFBS0MsSUFBVUwsT0FBT00sVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsR0NDbEZWLEVBQXlCQyxJQUNILG9CQUFYYSxRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVMLEVBQVNhLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFgsT0FBT0MsZUFBZUwsRUFBUyxhQUFjLENBQUVlLE9BQU8sR0FBTyxHLHVHQ0w5RCxNQUFNLEVBQStCQyxHQ0U5QixTQUFTQyxFQUF1QkMsRUFBc0JDLEVBQW9CQyxHQUM3RSxPQUFPLElBQUlDLEVBQTRCSCxFQUFTQyxFQUFlQyxFQUNuRSxDQWVPLE1BQU1DLEVBS1RDLFlBQVlKLEVBQXNCQyxFQUE4QkMsR0FFNUQsTUFJTUcsRUFBVUMsRUFBRUMsUUFBTyxFQUFNLENBQUMsRUFKZixDQUNiQyxZQUFhLElBRzRCUCxHQUU3Q1EsS0FBS0MsTUFBUSxDQUNURixZQUFhLGFBQWNILEVBQVFHLGNBR3ZDQyxLQUFLRSxXQUFhLENBQ2RILFlBQWEsZ0JBQWdCLEssTUFHekIsT0FEMEIsUUFBVixFQUFBQyxLQUFLQyxhQUFLLGVBQUVGLGVBRXJCLEtBRGMseUJBQ1YsS0FJbkJDLEtBQUtHLHFCQUF1QixnQkFBZ0IsS0FDeEMsSUFBSUMsRUFBUSxFQUVaLE9BRElKLEtBQUtFLFdBQVdILGVBQWVLLElBQzVCQSxDQUFLLEdBRXBCLENBRUFDLFlBRUEsQ0FFQUMsY0FFQSxDQUVBQyxXQUVJLE1BQU8sQ0FDSFIsWUFGU0MsS0FFU0MsTUFBTUYsY0FFaEMsRSIsInNvdXJjZXMiOlsid2VicGFjazovL1BsYXlHcm91bmQvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vUGxheUdyb3VuZC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vUGxheUdyb3VuZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL1BsYXlHcm91bmQvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9QbGF5R3JvdW5kL2V4dGVybmFsIHZhciBcImtvXCIiLCJ3ZWJwYWNrOi8vUGxheUdyb3VuZC8uL2Rlc2lnbmVyL0NvbXBvbmVudHNQbGF5RGVzaWduZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJjb25zdCBfX1dFQlBBQ0tfTkFNRVNQQUNFX09CSkVDVF9fID0ga287IiwiaW1wb3J0ICogYXMga28gZnJvbSBcImtub2Nrb3V0XCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gQ29tcG9uZW50c1BsYXlEZXNpZ25lcihlbGVtZW50OiBIVE1MRWxlbWVudCwgY29uZmlndXJhdGlvbjogYW55LCBiYXNlTW9kZWw6IGFueSk6IENvbXBvbmVudHNQbGF5RGVzaWduZXJDbGFzcyB7XHJcbiAgICByZXR1cm4gbmV3IENvbXBvbmVudHNQbGF5RGVzaWduZXJDbGFzcyhlbGVtZW50LCBjb25maWd1cmF0aW9uLCBiYXNlTW9kZWwpO1xyXG59IFxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uIHtcclxuICAgIGJsYWRlPzogYW55O1xyXG4gICAgX19zY29wZT86IHtcclxuICAgICAgICBtb2RlPzogYW55O1xyXG4gICAgICAgIHNoYXJlZG9UeXBlU3lzdGVtTmFtZT86IGFueTtcclxuICAgIH07XHJcbn1cclxuIFxyXG5leHBvcnQgaW50ZXJmYWNlIHRoaXNNb2RlbCBleHRlbmRzIENvbmZpZ3VyYXRpb25cclxue1xyXG4gICAgdG9kb01lc3NhZ2U6IGtvLk9ic2VydmFibGU8c3RyaW5nPiAsXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb21wb25lbnRzUGxheURlc2lnbmVyQ2xhc3Mge1xyXG4gICAgbW9kZWw6IHRoaXNNb2RlbDtcclxuICAgIHZhbGlkYXRpb246IGFueTtcclxuICAgIHZhbGlkYXRpb25FcnJvckNvdW50OiBrby5Db21wdXRlZDxudW1iZXI+O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEhUTUxFbGVtZW50LCBjb25maWd1cmF0aW9uOiBDb25maWd1cmF0aW9uLCBiYXNlTW9kZWw6IGFueSkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IGRlZmF1bHRzID0ge1xyXG4gICAgICAgICAgICB0b2RvTWVzc2FnZTogXCJcIixcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBjb25zdCBvcHRpb25zID0gJC5leHRlbmQodHJ1ZSwge30sIGRlZmF1bHRzLCBjb25maWd1cmF0aW9uKTtcclxuXHJcbiAgICAgICAgdGhpcy5tb2RlbCA9IHtcclxuICAgICAgICAgICAgdG9kb01lc3NhZ2U6IGtvLm9ic2VydmFibGUob3B0aW9ucy50b2RvTWVzc2FnZSksXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy52YWxpZGF0aW9uID0ge1xyXG4gICAgICAgICAgICB0b2RvTWVzc2FnZToga28ucHVyZUNvbXB1dGVkKCgpID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5tb2RlbD8udG9kb01lc3NhZ2UoKTtcclxuICAgICAgICAgICAgICAgIGlmICghbWVzc2FnZSkgcmV0dXJuIFwiVGhlIG1lc3NhZ2UgaXMgcmVxdWlyZWRcIjtcclxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLnZhbGlkYXRpb25FcnJvckNvdW50ID0ga28ucHVyZUNvbXB1dGVkKCgpID0+IHtcclxuICAgICAgICAgICAgbGV0IGZhaWxzID0gMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGlvbi50b2RvTWVzc2FnZSgpKSBmYWlscysrO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFpbHM7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgICAgIC8vIC4uLlxyXG4gICAgfVxyXG5cclxuICAgIGxvYWRBbmRCaW5kKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIC4uLlxyXG4gICAgfVxyXG5cclxuICAgIGdldE1vZGVsKCk6IHsgdG9kb01lc3NhZ2U6IHN0cmluZyB8IHVuZGVmaW5lZCB9IHtcclxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB0b2RvTWVzc2FnZTogc2VsZi5tb2RlbC50b2RvTWVzc2FnZSgpXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG5cclxuICJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZXhwb3J0cyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJrbyIsIkNvbXBvbmVudHNQbGF5RGVzaWduZXIiLCJlbGVtZW50IiwiY29uZmlndXJhdGlvbiIsImJhc2VNb2RlbCIsIkNvbXBvbmVudHNQbGF5RGVzaWduZXJDbGFzcyIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsIiQiLCJleHRlbmQiLCJ0b2RvTWVzc2FnZSIsInRoaXMiLCJtb2RlbCIsInZhbGlkYXRpb24iLCJ2YWxpZGF0aW9uRXJyb3JDb3VudCIsImZhaWxzIiwib25EZXN0cm95IiwibG9hZEFuZEJpbmQiLCJnZXRNb2RlbCJdLCJzb3VyY2VSb290IjoiIn0=